--[[
  สคริปต์นี้จะสุ่มเลือกเซิร์ฟเวอร์ที่มีผู้เล่นน้อยกว่า 30 คน
  และเทเลพอร์ตผู้เล่นไปยังเซิร์ฟเวอร์นั้น
]]

-- กำหนดตัวแปรสำหรับ Services ที่ต้องใช้
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

-- รอให้โฟลเดอร์ Servers และ RemoteFunction โหลดเสร็จก่อน
local serversFolder = ReplicatedStorage:WaitForChild("Servers")
local teleportFunc = ReplicatedStorage:WaitForChild("func")

-- สร้างตาราง (table) เพื่อเก็บเซิร์ฟเวอร์ที่มีผู้เล่นน้อยกว่า 30 คน
local eligibleServers = {}
local maxPlayers = 30 -- กำหนดจำนวนผู้เล่นสูงสุด

-- ตรวจสอบว่ามีโฟลเดอร์ Servers อยู่จริง
if serversFolder then
	print("กำลังค้นหาเซิร์ฟเวอร์ที่มีผู้เล่นน้อยกว่า " .. maxPlayers .. " คน...")

	-- วนลูปเพื่อหาเซิร์ฟเวอร์ทั้งหมดในโฟลเดอร์
	for _, serverInstance in ipairs(serversFolder:GetChildren()) do
		-- เพิ่มเงื่อนไขเพื่อตรวจสอบว่าชื่อขึ้นต้นด้วย "SERVER" หรือไม่
		if string.match(serverInstance.Name, "^SERVER") then
			if serverInstance:IsA("StringValue") then
				local currentPlayers = serverInstance:GetAttribute("Players")
				local rawServerData = serverInstance.Value

				-- ตัดคำว่า " nil" และช่องว่างที่อาจต่อท้ายค่า Value (JobId) ออก
				local serverData = string.gsub(rawServerData, "%s*nil$", "")

				-- ตรวจสอบว่าพบ Attribute 'Players' และค่า Value ไม่ใช่ค่าว่าง
				if currentPlayers and serverData ~= "" then
					print("พบเซิร์ฟเวอร์: " .. serverInstance.Name .. " | ผู้เล่น: " .. tostring(currentPlayers))

					-- ตรวจสอบว่าจำนวนผู้เล่นน้อยกว่าค่าที่กำหนดหรือไม่
					if currentPlayers < maxPlayers then
						print("เพิ่ม " .. serverInstance.Name .. " ไปยังรายชื่อเซิร์ฟเวอร์ที่สามารถเข้าร่วมได้")
						table.insert(eligibleServers, serverData)
					end
				end
			end
		end
	end

	-- หลังจากวนลูปครบแล้ว ให้ตรวจสอบว่าเราเจอเซิร์ฟเวอร์ที่เข้าเงื่อนไขหรือไม่
	if #eligibleServers > 0 then
		-- มีเซิร์ฟเวอร์ที่สามารถเข้าร่วมได้อย่างน้อยหนึ่งเซิร์ฟเวอร์
		print("พบเซิร์ฟเวอร์ที่สามารถเข้าร่วมได้ " .. #eligibleServers .. " เซิร์ฟเวอร์ กำลังทำการสุ่ม...")

		-- สุ่มเลือกเซิร์ฟเวอร์จากรายชื่อ
		local randomIndex = math.random(1, #eligibleServers)
		local targetServerData = eligibleServers[randomIndex]

		print("กำลังเทเลพอร์ตไปยังเซิร์ฟเวอร์ที่สุ่มเลือก...")

		-- [DEBUG] เพิ่มการ print เพื่อดูค่า JobId ที่จะส่งไป
		print("JobId ที่จะใช้ในการเทเลพอร์ต: " .. tostring(targetServerData))

		-- เรียกใช้ RemoteFunction เพื่อทำการเทเลพอร์ต
		teleportFunc:InvokeServer("teleport", targetServerData)
	else
		warn("ไม่พบเซิร์ฟเวอร์ที่มีผู้เล่นน้อยกว่า " .. maxPlayers .. " คน ไม่สามารถเทเลพอร์ตได้")
	end
else
	warn("ไม่พบโฟลเดอร์ 'Servers' ใน ReplicatedStorage")
end

