--[[
    Merged Control Panel & UI Script
    Creator: Gemini
    Version: 3.6 (Multi-Key Simulation Update)

    Description:
    This script provides a comprehensive control panel for players, including teleportation,
    automated farming, and player interaction. It also includes a separate, dedicated UI 
    element to display the player's "Diamond" count from their Inventory attributes.

    Update v3.6:
    - Added a one-time simulation of '1' and 'Shift' key presses upon joining the game.
    - Modified the recurring Anti-AFK loop to simulate a 'Space' key press every 4 minutes.

    Installation:
    Place this LocalScript inside StarterPlayer > StarterPlayerScripts.
]]

-- ... existing code ...
    if not NetworkEvent then warn("NetworkEvent not available for buyFood") return end
    local currentRootPart = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
-- ... existing code ...
    end
end)

-- [MODIFIED] Anti-AFK Loop to press 'Space'
task.spawn(function()
    local VirtualInputManager = game:GetService("VirtualInputManager")
    while true do
        task.wait(240) -- Every 4 minutes, a safe interval to prevent AFK kick
        
        -- This simulates a brief keyboard press which signals activity to the server.
        pcall(function()
            -- Simulate pressing Space
            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Space, false, game)
            task.wait(0.1)
            VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Space, false, game)
            
            print("Anti-AFK action performed (Space) to prevent disconnection.")
        end)
    end
end)


-- Player List Update Connections
Players.PlayerAdded:Connect(updatePlayerList)
-- ... existing code ...
    Character = char
    HumanoidRootPart = char:WaitForChild("HumanoidRootPart")
end)

print("Merged Control Panel & Diamond Counter UI Loaded Successfully. [v3.6 Multi-Key Simulation] üõ†Ô∏èüíé")

-- [NEW] Simulate initial key presses for '1' and 'Shift' after joining
task.wait(2) -- Wait for game to load
pcall(function()
    local VirtualInputManager = game:GetService("VirtualInputManager")
    print("Simulating initial key presses upon game start...")
    
    -- Press '1'
    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.One, false, game)
    task.wait(0.1)
    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.One, false, game)
    task.wait(0.5) -- Wait a bit before the next key

    -- Press 'Left Shift'
    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.LeftShift, false, game)
    task.wait(0.1)
    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.LeftShift, false, game)
    
    print("Initial key presses ('1' and 'Shift') complete.")
end)


-- [NEW] Auto-start the farm loop after initial presses
task.wait(1) -- Short delay after key presses
print("Auto-starting farm loop...")
toggleOreFarmLoop(UIElements.FarmOreButton)
