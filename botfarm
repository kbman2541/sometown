-- =============================================
-- [ใหม่] Configuration Block (ตั้งค่าทั้งหมดที่นี่)
-- การย้ายการตั้งค่าทั้งหมดมาไว้ที่เดียว ทำให้ "ฉลาดขึ้น" เพราะแก้ไขได้ง่ายในอนาคต
-- =============================================
local Config = {
    -- ชื่อ Attribute ที่จะแสดงบน UI (เช่น Diamond)
    CounterAttributeName = "Diamond",

    -- การตั้งค่าปุ่มลัด (Hotkeys)
    ToggleUIKey = Enum.KeyCode.T,
    FarmOreKey = Enum.KeyCode.Z,
    BuyFoodKey = Enum.KeyCode.LeftAlt, -- หรือ RightAlt ก็ได้
    SellPointKey = Enum.KeyCode.C,
    SellLoopKey = Enum.KeyCode.V,
    BlueLabelKey = Enum.KeyCode.B,

    -- พิกัด (Coordinates)
    FarmInitialPosition = Vector3.new(-296, 12, -2489),
    FarmProcessPosition = Vector3.new(-296, 12, -2489),
    FoodShopPosition = Vector3.new(3000, 16, 2280),
    SellPointPosition = Vector3.new(2853.1, 14.5, 2108.9),
    BlueLabelPosition = Vector3.new(1936, 15, 2285),
    DeathRecoveryPosition = Vector3.new(0, -200, 0),
    HealthRecoveryPosition = Vector3.new(50, -200, 50),

    -- รายการไอเทมที่จะขายอัตโนมัติ (สำหรับ Loop Sell)
    ItemsToSell = {"Rockfragments", "Soil", "Iron", "Copper", "Gold"},

    -- การตั้งค่าการฟาร์ม และ Anti-Stuck
    FarmFullAmount = 100, -- จำนวน "Rock" ที่จะถือว่าเต็ม
    ProcessWalkTimeout = 10, -- (วินาที) เวลารอสูงสุดก่อนที่จะเทเลพอร์ตไปแปรรูป
    ProcessWaitTime = 5, -- (วินาที) เวลารอหลังแปรรูปเสร็จ
    GeneralStuckTime = 5, -- (วินาที) เวลาที่หยุดนิ่งทั่วไปก่อนจะหาทางใหม่
    AtOreStuckTime = 10, -- (วินาที) เวลาที่หยุดนิ่ง *ที่แร่* ก่อนจะหาแร่ก้อนใหม่
    AtOreDistanceThreshold = 3, -- (Studs) ระยะห่างที่จะถือว่า "อยู่ที่แร่"
    FarmAreaCheckDistance = 1000, -- (Studs) ระยะห่างจากจุดฟาร์มก่อนที่จะวาร์ปกลับ
    FarmAreaCheckInterval = 60, -- (วินาที) ตรวจสอบทุกๆ 1 นาที

    -- การตั้งค่าการกิน/ดื่ม อัตโนมัติ
    AutoEatThreshold = 70, -- (เปอร์เซ็นต์) ถ้าค่าสถานะต่ำกว่านี้ จะกิน/ดื่ม
    AutoEatCheckInterval = 5, -- (วินาที)

    -- การตั้งค่า Anti-AFK
    AntiAFKInterval = 240, -- (วินาที) กดปุ่มทุกๆ 4 นาที

    -- การตั้งค่าการกู้คืน (Recovery)
    HealthRecoveryWait1 = 30, -- (วินาที)
    HealthRecoveryWait2 = 2,  -- (วินาที)
    HealthRecoveryWait3 = 5,  -- (วินาที)
}

-- =============================================
-- Service Definitions
-- =============================================
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local PathfindingService = game:GetService("PathfindingService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- =============================================
-- [ปรับปรุง] Anti-Cheat Bypass (ทำให้เงียบลง)
-- เปลี่ยนจาก "warn" เป็น "print" เพื่อลดการแจ้งเตือนใน console
-- คุณสามารถลบ print() ออกไปเลยก็ได้เพื่อความเงียบสูงสุด
-- =============================================
pcall(function()
    local TeleportService = game:GetService("TeleportService")
    local mt = getrawmetatable(TeleportService)
    local oldIndex = mt.__index

    setmetatable(TeleportService, {
        __index = function(self, key)
            if key == "Teleport" or key == "TeleportAsync" or key == "TeleportToPrivateServer" or key == "TeleportToPlaceInstance" then
                return function(...)
                    -- [เปลี่ยน] "warn" เป็น "print"
                    print("A script attempted to teleport the player. Call was blocked by UpdatedMovementScript.lua.")
                end
            end
            return oldIndex(self, key)
        end
    })
    print("Anti-teleport bypass initialized successfully.")
end)

-- =============================================
-- [ปรับปรุง] Workspace.Folder cleanup
-- =============================================
Workspace.ChildAdded:Connect(function(child)
    if child.Name == "Folder" then
        task.wait() 
        child:Destroy()
        print("Workspace.Folder was added and has now been deleted.")
    end
end)
pcall(function()
    Workspace:FindFirstChild("Folder"):Destroy()
    print("Workspace.Folder found on startup and was deleted.")
end)


-- Ensure this script only runs on the client
if not RunService:IsClient() then
    return
end

-- =============================================
-- [ใหม่] Helper Function (ฟังก์ชันช่วยเหลือ)
-- "ฉลาดขึ้น" โดยการเพิ่ม Timeout ให้กับ WaitForChild เพื่อป้องกันสคริปต์ค้าง
-- =============================================
local function SafeWaitForChild(parent, childName, timeout)
    timeout = timeout or 5 -- 5 วินาที
    local startTime = tick()
    while tick() - startTime < timeout do
        local child = parent:FindFirstChild(childName)
        if child then
            return child
        end
        task.wait()
    end
    warn("SafeWaitForChild timed out waiting for '" .. childName .. "' in '" .. parent.Name .. "'")
    return nil
end

-- =============================================
-- Local Player & Character Setup
-- =============================================
local LocalPlayer = Players.LocalPlayer
local PlayerGui = SafeWaitForChild(LocalPlayer, "PlayerGui")
if not PlayerGui then return end -- หยุดทำงานถ้า PlayerGui ไม่มี

local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = SafeWaitForChild(Character, "HumanoidRootPart", 10)
local inventoryFolder = SafeWaitForChild(LocalPlayer, "Inventory", 10)
local statusFolder = SafeWaitForChild(LocalPlayer, "Status", 10)
local NetworkEvent

-- Safely get NetworkEvent
pcall(function()
    local modules = SafeWaitForChild(ReplicatedStorage, "Modules", 10)
    if modules then
        local networkFramework = SafeWaitForChild(modules, "NetworkFramework", 10)
        if networkFramework then
            NetworkEvent = SafeWaitForChild(networkFramework, "NetworkEvent", 10)
        end
    end
    if not NetworkEvent then
        warn("Could not find NetworkEvent. Many functions will fail.")
    end
end)

-- Clean up old UI
pcall(function()
    if PlayerGui:FindFirstChild("CoordinateUI") then PlayerGui.CoordinateUI:Destroy() end
    if PlayerGui:FindFirstChild("PlayerTeleportGui") then PlayerGui.PlayerTeleportGui:Destroy() end
    if PlayerGui:FindFirstChild("CombinedControlUI") then PlayerGui.CombinedControlUI:Destroy() end
    if PlayerGui:FindFirstChild("ItemCounterGui") then PlayerGui.ItemCounterGui:Destroy() end
end)

-- =============================================
-- UI Elements (Global Scope)
-- =============================================
local UIElements 
local diamondCountLabel 
local ControlPanelFrame
local playerListFrame 

-- =============================================
-- [ปรับปรุง] ระบบการเคลื่อนที่
-- "ฉลาดขึ้น" โดยการแยกระหว่างการ Teleport (เสี่ยง) และการ Walk (ปลอดภัย)
-- =============================================
local function instantTeleportTo(destinationPosition)
    task.spawn(function()
        local char = LocalPlayer.Character
        local rootPart = char and char:FindFirstChild("HumanoidRootPart")
        if not rootPart then
            warn("instantTeleportTo failed: Character or HumanoidRootPart not found.")
            return
        end
        rootPart.CFrame = CFrame.new(destinationPosition)
        print("Instantly Teleported to " .. tostring(destinationPosition))
    end)
end

-- ===================================================================
-- [ปรับปรุง] ฟังก์ชันการเดิน Pathfinding (ปลอดภัยกว่า)
-- นี่คือฟังก์ชันที่ "ฉลาด" สำหรับการเคลื่อนที่ส่วนใหญ่
-- ===================================================================
local function walkToPosition(destinationPosition, onCancelled)
    local character = LocalPlayer.Character
    if not character then return end
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    local rootPart = character:FindFirstChild("HumanoidRootPart")

    if not (humanoid and rootPart and humanoid.Health > 0) then return end

    print("Walking (Pathfind) to position:", destinationPosition, ". Calculating path...")

    local agentParameters = { AgentRadius = 3, AgentHeight = 6, AgentCanJump = true }
    local path = PathfindingService:CreatePath(agentParameters)

    local success, errorMessage = pcall(function()
        path:ComputeAsync(rootPart.Position, destinationPosition)
    end)

    if success and path.Status == Enum.PathStatus.Success then
        print("Path calculated. Following waypoints...")
        local waypoints = path:GetWaypoints()

        local pathBlockedConnection
        local function onPathBlocked(blockedWaypointIndex)
             if blockedWaypointIndex < #waypoints and onCancelled and onCancelled() then
                 print("Path blocked at waypoint " .. blockedWaypointIndex .. ". Recalculating...")
                 if pathBlockedConnection then pathBlockedConnection:Disconnect() end
                 walkToPosition(destinationPosition, onCancelled) -- Recalculate and retry
             end
        end
        pathBlockedConnection = path.Blocked:Connect(onPathBlocked)

        for _, waypoint in ipairs(waypoints) do
            -- [ปรับปรุง] ตรวจสอบว่ากระบวนการถูกยกเลิกหรือไม่
            if onCancelled and not onCancelled() then
                print("Process was cancelled mid-path. Aborting walk.")
                break
            end
            
            humanoid:MoveTo(waypoint.Position)

            if waypoint.Action == Enum.PathWaypointAction.Jump then
                humanoid.Jump = true
            end

            humanoid.MoveToFinished:Wait()
        end

        if pathBlockedConnection then pathBlockedConnection:Disconnect() end
        print("Reached destination or path ended.")
    else
        warn("Pathfinding to position failed: ", errorMessage or "No viable path.", "Using direct walk instead.")
        humanoid:MoveTo(destinationPosition)
        humanoid.MoveToFinished:Wait() -- Also wait for direct move
    end
end


-- =============================================
-- Teleport to Player Logic (ใช้ Teleport)
-- =============================================
local function moveToPlayerObject(targetPlayer)
    local localCharacter = LocalPlayer.Character
    local characterFolder = Workspace:FindFirstChild("Character")
    local targetObject = characterFolder and characterFolder:FindFirstChild(targetPlayer.Name)

    if localCharacter and localCharacter:FindFirstChild("HumanoidRootPart") and targetObject then
        local targetPosition
        if targetObject:IsA("Model") and targetObject.PrimaryPart then
            targetPosition = targetObject.PrimaryPart.CFrame.Position
        elseif targetObject:IsA("BasePart") then
            targetPosition = targetObject.Position
        else
            warn("Could not determine position for target object: '" .. targetObject.Name .. "'")
            return
        end

        local success, err = pcall(function()
            print("Teleporting to " .. targetPlayer.Name .. "'s object...")
            instantTeleportTo(targetPosition + Vector3.new(0, 5, 0))
        end)
        if not success then warn("Movement failed: ", err) end
    else
        if not targetObject then
            print("Movement failed: Cannot find object for player '" .. targetPlayer.Name .. "'")
        else
            print("Movement failed: Local player's character not found.")
        end
    end
end

-- (ฟังก์ชัน updatePlayerList ไม่เปลี่ยนแปลง) ...
local function updatePlayerList()
    if not playerListFrame or not playerListFrame.Parent then return end

    local existingButtons = {}
    for _, child in ipairs(playerListFrame:GetChildren()) do
        if child:IsA("TextButton") then existingButtons[child.Name] = child end
    end
    
    local characterFolder = Workspace:FindFirstChild("Character")

    if characterFolder then
        for _, player in ipairs(Players:GetPlayers()) do
            if player == LocalPlayer then continue end
            local targetObject = characterFolder:FindFirstChild(player.Name)
            if targetObject then
                if not existingButtons[player.Name] then
                    local playerButton = Instance.new("TextButton")
                    playerButton.Name = player.Name
                    playerButton.Text = player.DisplayName
                    playerButton.Size = UDim2.new(1, 0, 0, 30)
                    playerButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                    playerButton.TextColor3 = Color3.fromRGB(255, 255, 255)
                    playerButton.Font = Enum.Font.SourceSans
                    playerButton.TextSize = 16
                    playerButton.Parent = playerListFrame
                    playerButton.MouseButton1Click:Connect(function()
                        moveToPlayerObject(player)
                    end)
                end
                existingButtons[player.Name] = nil
            end
        end
    end

    for _, button in pairs(existingButtons) do
        button:Destroy()
    end
end

-- =============================================
-- UI Creation Functions
-- =============================================

local function createDiamondCounterUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ItemCounterGui"
    screenGui.ResetOnSpawn = false
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    local shadowFrame = Instance.new("Frame")
    shadowFrame.Name = "ShadowFrame"
    shadowFrame.BackgroundColor3 = Color3.new(0, 0, 0)
    shadowFrame.BackgroundTransparency = 0.6
    shadowFrame.BorderSizePixel = 0
    shadowFrame.AnchorPoint = Vector2.new(1, 0)
    shadowFrame.Position = UDim2.new(1, -15 + 3, 0, 15 + 3) 
    shadowFrame.Size = UDim2.new(0, 220, 0, 60)
    shadowFrame.ZIndex = 1
    shadowFrame.Parent = screenGui
    
    local shadowCorner = Instance.new("UICorner")
    shadowCorner.CornerRadius = UDim.new(0, 12)
    shadowCorner.Parent = shadowFrame
    
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "CounterFrame"
    mainFrame.BackgroundColor3 = Color3.fromRGB(40, 42, 54)
    mainFrame.BorderColor3 = Color3.fromRGB(140, 140, 140)
    mainFrame.BorderSizePixel = 1
    mainFrame.AnchorPoint = Vector2.new(1, 0)
    mainFrame.Position = UDim2.new(1, -15, 0, 15)
    mainFrame.Size = UDim2.new(0, 220, 0, 60)
    mainFrame.ZIndex = 2
    mainFrame.Parent = screenGui
    
    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0, 12)
    uiCorner.Parent = mainFrame
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "Title"
    -- [ใช้ Config]
    titleLabel.Text = Config.CounterAttributeName .. ":"
    titleLabel.TextColor3 = Color3.fromRGB(248, 248, 242)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Font = Enum.Font.SourceSansBold
    titleLabel.TextSize = 24
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Position = UDim2.new(0, 15, 0.5, 0)
    titleLabel.Size = UDim2.new(1, -95, 0, 30)
    titleLabel.AnchorPoint = Vector2.new(0, 0.5)
    titleLabel.Parent = mainFrame
    
    local countLabel = Instance.new("TextLabel")
    countLabel.Name = "Count"
    countLabel.Text = "..."
    countLabel.TextColor3 = Color3.fromRGB(255, 255, 100)
    countLabel.BackgroundTransparency = 1
    countLabel.Font = Enum.Font.SourceSansBold
    countLabel.TextSize = 28
    countLabel.TextXAlignment = Enum.TextXAlignment.Right
    countLabel.Position = UDim2.new(1, -15, 0.5, 0)
    countLabel.Size = UDim2.new(0, 80, 0, 30)
    countLabel.AnchorPoint = Vector2.new(1, 0.5)
    countLabel.Parent = mainFrame
    
    screenGui.Parent = PlayerGui
    
    return countLabel
end

-- (ฟังก์ชัน createControlPanelUI ไม่เปลี่ยนแปลงมากนัก แค่อัปเดตข้อความจาก Config) ...
local function createControlPanelUI()
    local ScreenGui = Instance.new("ScreenGui"); ScreenGui.Name = "CombinedControlUI"; ScreenGui.ResetOnSpawn = false; ScreenGui.Parent = PlayerGui

    local frameHeight = 400
    
    ControlPanelFrame = Instance.new("Frame"); ControlPanelFrame.Name = "ControlPanelFrame";
    ControlPanelFrame.Size = UDim2.new(0, 250, 0, frameHeight)
    ControlPanelFrame.Position = UDim2.new(0.5, 0, 0.5, 0);
    ControlPanelFrame.AnchorPoint = Vector2.new(0.5, 0.5); 
    ControlPanelFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40); ControlPanelFrame.BorderSizePixel = 0; ControlPanelFrame.Active = true; ControlPanelFrame.Draggable = true; ControlPanelFrame.ClipsDescendants = true; ControlPanelFrame.Parent = ScreenGui
    local UICorner_Main = Instance.new("UICorner", ControlPanelFrame); UICorner_Main.CornerRadius = UDim.new(0, 8)

    local TitleBar = Instance.new("Frame"); TitleBar.Name = "TitleBar"; TitleBar.Size = UDim2.new(1, 0, 0, 30); TitleBar.BackgroundColor3 = Color3.fromRGB(45, 45, 60); TitleBar.BorderSizePixel = 0; TitleBar.Parent = ControlPanelFrame
    local UICorner_Title = Instance.new("UICorner", TitleBar); UICorner_Title.CornerRadius = UDim.new(0, 8)
    local TitleLabel = Instance.new("TextLabel"); TitleLabel.Parent = TitleBar; TitleLabel.Name = "TitleLabel"; TitleLabel.Size = UDim2.new(1, -40, 1, 0); TitleLabel.Position = UDim2.new(0, 10, 0, 0); TitleLabel.BackgroundTransparency = 1; TitleLabel.Font = Enum.Font.SourceSansBold; TitleLabel.Text = "Control Panel"; TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255); TitleLabel.TextSize = 18; TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    local CollapseButton = Instance.new("TextButton"); CollapseButton.Parent = TitleBar; CollapseButton.Name = "CollapseButton"; CollapseButton.Size = UDim2.new(0, 20, 0, 20); CollapseButton.Position = UDim2.new(1, -25, 0.5, -10); CollapseButton.BackgroundColor3 = Color3.fromRGB(60, 60, 75); CollapseButton.Font = Enum.Font.SourceSansBold; CollapseButton.Text = "-"; CollapseButton.TextColor3 = Color3.fromRGB(255, 255, 255); CollapseButton.TextSize = 18
    local UICorner_Collapse = Instance.new("UICorner", CollapseButton); UICorner_Collapse.CornerRadius = UDim.new(0, 4)

    local TabContainer = Instance.new("Frame"); TabContainer.Name = "TabContainer"; TabContainer.Size = UDim2.new(1, 0, 0, 30); TabContainer.Position = UDim2.new(0, 0, 0, 30); TabContainer.BackgroundTransparency = 1; TabContainer.Parent = ControlPanelFrame
    local ControlsTabButton = Instance.new("TextButton"); ControlsTabButton.Name = "ControlsTabButton"; ControlsTabButton.Size = UDim2.new(0.5, 0, 1, 0); ControlsTabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 80); ControlsTabButton.Font = Enum.Font.SourceSansBold; ControlsTabButton.Text = "Controls"; ControlsTabButton.TextColor3 = Color3.fromRGB(255, 255, 255); ControlsTabButton.TextSize = 16; ControlsTabButton.Parent = TabContainer
    local PlayersTabButton = Instance.new("TextButton"); PlayersTabButton.Name = "PlayersTabButton"; PlayersTabButton.Size = UDim2.new(0.5, 0, 1, 0); PlayersTabButton.Position = UDim2.new(0.5, 0, 0, 0); PlayersTabButton.BackgroundColor3 = Color3.fromRGB(40, 40, 50); PlayersTabButton.Font = Enum.Font.SourceSansBold; PlayersTabButton.Text = "Players"; PlayersTabButton.TextColor3 = Color3.fromRGB(200, 200, 200); PlayersTabButton.TextSize = 16; PlayersTabButton.Parent = TabContainer

    local ContentContainer = Instance.new("Frame"); ContentContainer.Name = "ContentContainer"; ContentContainer.Size = UDim2.new(1, 0, 1, -60); ContentContainer.Position = UDim2.new(0, 0, 0, 60); ContentContainer.BackgroundTransparency = 1; ContentContainer.Parent = ControlPanelFrame
    
    local ControlsContentFrame = Instance.new("Frame"); ControlsContentFrame.Name = "ControlsContent"; ControlsContentFrame.Size = UDim2.new(1, 0, 1, 0); ControlsContentFrame.BackgroundTransparency = 1; ControlsContentFrame.Parent = ContentContainer; ControlsContentFrame.Visible = true
    local CoordinateLabel = Instance.new("TextLabel"); CoordinateLabel.Parent = ControlsContentFrame; CoordinateLabel.Name = "CoordinateLabel"; CoordinateLabel.Size = UDim2.new(1, -20, 0, 30); CoordinateLabel.Position = UDim2.new(0, 10, 0, 0); CoordinateLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 65); CoordinateLabel.Font = Enum.Font.SourceSansBold; CoordinateLabel.Text = "X: 0.0, Y: 0.0, Z: 0.0"; CoordinateLabel.TextColor3 = Color3.fromRGB(200, 200, 200); CoordinateLabel.TextSize = 16
    local UICorner_CoordLabel = Instance.new("UICorner", CoordinateLabel); UICorner_CoordLabel.CornerRadius = UDim.new(0, 6)
    local InputBox = Instance.new("TextBox"); InputBox.Parent = ControlsContentFrame; InputBox.Name = "InputBox"; InputBox.Size = UDim2.new(1, -70, 0, 30); InputBox.Position = UDim2.new(0, 10, 0, 40); InputBox.BackgroundColor3 = Color3.fromRGB(50, 50, 65); InputBox.Font = Enum.Font.SourceSans; InputBox.Text = "X, Y, Z"; InputBox.TextColor3 = Color3.fromRGB(200, 200, 200); InputBox.TextSize = 16; InputBox.ClearTextOnFocus = true
    local UICorner_InputBox = Instance.new("UICorner", InputBox); UICorner_InputBox.CornerRadius = UDim.new(0, 6)
    local GoButton = Instance.new("TextButton"); GoButton.Parent = ControlsContentFrame; GoButton.Name = "GoButton"; GoButton.Size = UDim2.new(0, 50, 0, 30); GoButton.Position = UDim2.new(1, -60, 0, 40); GoButton.BackgroundColor3 = Color3.fromRGB(0, 150, 200); GoButton.Font = Enum.Font.SourceSansBold; GoButton.Text = "Go"; GoButton.TextColor3 = Color3.fromRGB(255, 255, 255); GoButton.TextSize = 16
    local UICorner_GoBtn = Instance.new("UICorner", GoButton); UICorner_GoBtn.CornerRadius = UDim.new(0, 6)
    local FarmOreButton = Instance.new("TextButton"); FarmOreButton.Parent = ControlsContentFrame; FarmOreButton.Name = "FarmOreButton"; FarmOreButton.Size = UDim2.new(1, -20, 0, 30); FarmOreButton.Position = UDim2.new(0, 10, 0, 80); FarmOreButton.BackgroundColor3 = Color3.fromRGB(200, 40, 40); FarmOreButton.Font = Enum.Font.SourceSansBold; FarmOreButton.Text = "Farm Ore (Z)"; FarmOreButton.TextColor3 = Color3.fromRGB(255, 255, 255); FarmOreButton.TextSize = 16
    local UICorner_FarmOreBtn = Instance.new("UICorner", FarmOreButton); UICorner_FarmOreBtn.CornerRadius = UDim.new(0, 6)
    local BuyFoodButton = Instance.new("TextButton"); BuyFoodButton.Name = "BuyFoodButton"; BuyFoodButton.Size = UDim2.new(1, -20, 0, 30); BuyFoodButton.Position = UDim2.new(0, 10, 0, 120); BuyFoodButton.BackgroundColor3 = Color3.fromRGB(255, 180, 0); BuyFoodButton.Font = Enum.Font.SourceSansBold; BuyFoodButton.Text = "Buy Food (Alt)"; BuyFoodButton.TextColor3 = Color3.fromRGB(255, 255, 255); BuyFoodButton.TextSize = 16; BuyFoodButton.Parent = ControlsContentFrame
    local UICorner_BuyFoodBtn = Instance.new("UICorner", BuyFoodButton); UICorner_BuyFoodBtn.CornerRadius = UDim.new(0, 6)
    local MoveToSellButton = Instance.new("TextButton"); MoveToSellButton.Name = "MoveToSellButton"; MoveToSellButton.Size = UDim2.new(1, -20, 0, 30); MoveToSellButton.Position = UDim2.new(0, 10, 0, 160); MoveToSellButton.BackgroundColor3 = Color3.fromRGB(150, 50, 200); MoveToSellButton.Font = Enum.Font.SourceSansBold; MoveToSellButton.Text = "Sell Point (C)"; MoveToSellButton.TextColor3 = Color3.fromRGB(255, 255, 255); MoveToSellButton.TextSize = 16; MoveToSellButton.Parent = ControlsContentFrame
    local UICorner_MoveSellBtn = Instance.new("UICorner", MoveToSellButton); UICorner_MoveSellBtn.CornerRadius = UDim.new(0, 6)
    local SellLoopButton = Instance.new("TextButton"); SellLoopButton.Name = "SellLoopButton"; SellLoopButton.Size = UDim2.new(1, -20, 0, 30); SellLoopButton.Position = UDim2.new(0, 10, 0, 200); SellLoopButton.BackgroundColor3 = Color3.fromRGB(200, 100, 0); SellLoopButton.Font = Enum.Font.SourceSansBold; SellLoopButton.Text = "Loop Sell (V)"; SellLoopButton.TextColor3 = Color3.fromRGB(255, 255, 255); SellLoopButton.TextSize = 16; SellLoopButton.Parent = ControlsContentFrame
    local UICorner_SellLoopBtn = Instance.new("UICorner", SellLoopButton); UICorner_SellLoopBtn.CornerRadius = UDim.new(0, 6)
    local BlueLabelButton = Instance.new("TextButton"); BlueLabelButton.Name = "BlueLabelButton"; BlueLabelButton.Size = UDim2.new(1, -20, 0, 30); BlueLabelButton.Position = UDim2.new(0, 10, 0, 240); BlueLabelButton.BackgroundColor3 = Color3.fromRGB(20, 120, 220); BlueLabelButton.Font = Enum.Font.SourceSansBold; BlueLabelButton.Text = "Blue Label (B)"; BlueLabelButton.TextColor3 = Color3.fromRGB(255, 255, 255); BlueLabelButton.TextSize = 16; BlueLabelButton.Parent = ControlsContentFrame
    local UICorner_BlueLabelBtn = Instance.new("UICorner", BlueLabelButton); UICorner_BlueLabelBtn.CornerRadius = UDim.new(0, 6)

    -- Players Content
    local PlayersContentFrame = Instance.new("Frame"); PlayersContentFrame.Name = "PlayersContent"; PlayersContentFrame.Size = UDim2.new(1, 0, 1, 0); PlayersContentFrame.BackgroundTransparency = 1; PlayersContentFrame.Parent = ContentContainer; PlayersContentFrame.Visible = false
    local WalkToKealohaButton = Instance.new("TextButton"); WalkToKealohaButton.Name = "WalkToKealohaButton"; WalkToKealohaButton.Size = UDim2.new(1, -20, 0, 30); WalkToKealohaButton.Position = UDim2.new(0, 10, 0, 5); WalkToKealohaButton.BackgroundColor3 = Color3.fromRGB(220, 120, 0); WalkToKealohaButton.Font = Enum.Font.SourceSansBold; WalkToKealohaButton.Text = "Find KealohaWeaver5712"; WalkToKealohaButton.TextColor3 = Color3.fromRGB(255, 255, 255); WalkToKealohaButton.TextSize = 16; WalkToKealohaButton.Parent = PlayersContentFrame
    local UICorner_WarpKealohaBtn = Instance.new("UICorner", WalkToKealohaButton); UICorner_WarpKealohaBtn.CornerRadius = UDim.new(0, 6)
    playerListFrame = Instance.new("ScrollingFrame"); playerListFrame.Name = "PlayerListFrame"; playerListFrame.Parent = PlayersContentFrame; playerListFrame.Size = UDim2.new(1, -20, 1, -45); playerListFrame.Position = UDim2.new(0, 10, 0, 40); playerListFrame.BackgroundTransparency = 1; playerListFrame.BorderSizePixel = 0; playerListFrame.CanvasSize = UDim2.new(0, 0, 0, 0); playerListFrame.ScrollBarImageColor3 = Color3.fromRGB(180, 180, 180); playerListFrame.ScrollBarThickness = 8
    local listLayout = Instance.new("UIListLayout"); listLayout.Parent = playerListFrame; listLayout.SortOrder = Enum.SortOrder.Name; listLayout.Padding = UDim.new(0, 5); listLayout.FillDirection = Enum.FillDirection.Vertical; listLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center

    -- [ใช้ Config] อัปเดตข้อความบนปุ่มเพื่อแสดงคีย์ลัด
    FarmOreButton.Text = string.format("Farm Ore (%s)", Config.FarmOreKey.Name)
    BuyFoodButton.Text = string.format("Buy Food (%s)", Config.BuyFoodKey.Name:gsub("Left", ""):gsub("Right", ""))
    MoveToSellButton.Text = string.format("Sell Point (%s)", Config.SellPointKey.Name)
    SellLoopButton.Text = string.format("Loop Sell (%s)", Config.SellLoopKey.Name)
    BlueLabelButton.Text = string.format("Blue Label (%s)", Config.BlueLabelKey.Name)

    return {
        ScreenGui = ScreenGui,
        CollapseButton = CollapseButton,
        CoordinateLabel = CoordinateLabel,
        InputBox = InputBox,
        GoButton = GoButton,
        FarmOreButton = FarmOreButton,
        BuyFoodButton = BuyFoodButton,
        MoveToSellButton = MoveToSellButton,
        SellLoopButton = SellLoopButton,
        BlueLabelButton = BlueLabelButton,
        WalkToKealohaButton = WalkToKealohaButton,
        ControlsTabButton = ControlsTabButton,
        PlayersTabButton = PlayersTabButton,
        ControlsContentFrame = ControlsContentFrame,
        PlayersContentFrame = PlayersContentFrame,
        ControlPanelFrame = ControlPanelFrame
    }
end

-- =============================================
-- Logic & Functions (Merged & Stabilized)
-- =============================================
-- State Variables
local isCollapsed = false
local originalSize = UDim2.new(0, 250, 0, 400)
local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
local isOreFarmLoopActive = false
local inventoryConnection = nil
local isWaitingForRockToClear = false
local lastPosition = Vector3.new()
local timeStationary = 0
local currentTargetOre = nil
local timeAtOreStationary = 0
local isSellLoopActive = false 

-- Logic for Diamond Counter
local function setupDiamondCounter(countLabel)
    if not inventoryFolder then 
        warn("Diamond Counter: Inventory folder not found!")
        return
    end

    local function updateAttributeCount()
        -- [ใช้ Config]
        local amount = inventoryFolder:GetAttribute(Config.CounterAttributeName) or 0
        countLabel.Text = tostring(amount)
    end

    updateAttributeCount() -- Initial update

    inventoryFolder.AttributeChanged:Connect(function(attributeName)
        -- [ใช้ Config]
        if attributeName == Config.CounterAttributeName then
            updateAttributeCount()
        end
    end)
    print("Diamond Counter UI logic initialized.")
end


-- New function to safely create the list of objects to track
local function getObjectsToTrack()
    local trackList = {}
    local farm = Workspace:FindFirstChild("Farm")
    if not farm then
        warn("'Farm' folder not found in Workspace.")
        return trackList
    end

    local rockFolder = farm:FindFirstChild("Rock")
    if not rockFolder then
        warn("'Rock' folder not found in Workspace.Farm.")
        return trackList
    end

    for _, child in ipairs(rockFolder:GetChildren()) do
        if child:IsA("PVInstance") then
            table.insert(trackList, child)
        end
    end
    
    return trackList
end


-- Pathfinding walk function to ore
local function findAndWalkToClosestOre(oreToExclude)
    local character = LocalPlayer.Character
    if not character then return end
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    
    if not (humanoid and rootPart and humanoid.Health > 0 and isOreFarmLoopActive) then return end

    task.wait(0.5)

    local objectsToTrack = getObjectsToTrack()
    if #objectsToTrack == 0 then
        warn("No objects to track were found. Aborting walk.")
        currentTargetOre = nil
        return
    end

    local closestObject, minDistance = nil, math.huge
    for _, obj in ipairs(objectsToTrack) do
        if obj and obj.Parent and obj ~= oreToExclude then
            local dist = (rootPart.Position - obj.WorldPivot.Position).Magnitude
            if dist < minDistance then
                minDistance, closestObject = dist, obj
            end
        end
    end

    if closestObject then
        currentTargetOre = closestObject
        print("Walking to closest object:", closestObject:GetFullName())
        
        -- [ปรับปรุง] ใช้ฟังก์ชัน walkToPosition ที่มีการตรวจสอบการยกเลิก
        walkToPosition(closestObject.WorldPivot.Position, function()
            -- ฟังก์ชัน onCancelled: คืนค่า true ถ้ายังฟาร์มอยู่, false ถ้ายกเลิก
            return isOreFarmLoopActive
        end)
        
    else
        currentTargetOre = nil
        warn("Could not find any valid objects to walk to (excluding current target).")
    end
end

-- [ปรับปรุง] Move to Coords (ใช้ 'walk' แทน 'teleport' เพื่อความปลอดภัย)
local function moveToCoords(inputBox)
    local parts = inputBox.Text:split(",")
    if #parts == 3 then
        local x, y, z = tonumber(parts[1]), tonumber(parts[2]), tonumber(parts[3])
        if x and y and z then
            -- [เปลี่ยน] "ฉลาดขึ้น" โดยการเดินแทนการเทเลพอร์ต
            walkToPosition(Vector3.new(x, y, z))
            inputBox.Text = ""
        else
            inputBox.Text = "Error: Invalid Format"
        end
    else
        inputBox.Text = "Error: Use X,Y,Z"
    end
end

-- Farm Step for auto-resume
local function executeResumeFarmStep()
    if not isOreFarmLoopActive then return end
    -- [ใช้ Config]
    -- เรายังคงใช้ teleport ที่นี่เพื่อกลับไปยังพื้นที่ฟาร์มอย่างรวดเร็วหลังการแปรรูป
    -- แต่การเดินไปหาแร่จะใช้ pathfinding
    instantTeleportTo(Config.FarmInitialPosition)
    task.wait(1) -- Wait for teleport to settle
    findAndWalkToClosestOre(nil) -- Then start walking to the nearest ore
end

-- Inventory change handler for farming
local function onInventoryChanged(attributeName, farmButton)
    if not inventoryFolder then return end
    
    local rockCount = inventoryFolder:GetAttribute("Rock") or 0

    -- [ใช้ Config]
    if isOreFarmLoopActive and not isWaitingForRockToClear and rockCount >= Config.FarmFullAmount then
        isWaitingForRockToClear = true
        isOreFarmLoopActive = false -- Pause farming

        farmButton.Text = "Walking to Process..."
        farmButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)

        print("Rock count reached 100. Walking to process point with a " .. Config.ProcessWalkTimeout .. "-second timeout.")
        task.wait(1)

        local walkCompleted = false
        local walkCancelled = false

        task.spawn(function()
            -- [ใช้ Config]
            walkToPosition(Config.FarmProcessPosition, function()
                return isWaitingForRockToClear -- ตรวจสอบว่ายังอยู่ในสถานะ "กำลังรอ"
            end) 
            if isWaitingForRockToClear then 
                walkCompleted = true
            else
                walkCancelled = true
            end
        end)

        local timeWaited = 0
        -- [ใช้ Config]
        while not walkCompleted and timeWaited < Config.ProcessWalkTimeout do
            if not isWaitingForRockToClear then 
                walkCancelled = true
                break
            end
            task.wait(0.1)
            timeWaited = timeWaited + 0.1
        end
        
        if walkCancelled then
            print("Walk to process was cancelled by the user.")
            return
        end

        if not walkCompleted then
            print("Walk to process point timed out. Teleporting to destination...")
            -- [ใช้ Config]
            instantTeleportTo(Config.FarmProcessPosition)
            task.wait(1) 
        else
            print("Walk to process point completed successfully.")
        end

        if isWaitingForRockToClear then
            print("Character is at the processing point. Sending 'Process' command to server...")
            -- [ปรับปรุง] เพิ่ม pcall เพื่อความปลอดภัย
            local success, err = pcall(function()
                NetworkEvent:FireServer("fire", nil, "Process", "Rock")
            end)
            if not success then
                warn("Failed to send 'Process' event: ", err)
            end
        else
            print("Walk was cancelled just before processing. Not sending 'Process' command.")
        end

    elseif isWaitingForRockToClear and rockCount == 0 then
        print("Rock inventory cleared. Waiting " .. Config.ProcessWaitTime .. " seconds before resuming farming...")
        -- [ใช้ Config]
        task.wait(Config.ProcessWaitTime)

        if not isWaitingForRockToClear then
            print("Farming was cancelled during the wait. Aborting resume.")
            return
        end
        
        print("Resuming farming...")
        isWaitingForRockToClear = false
        isOreFarmLoopActive = true -- Resume farming

        farmButton.Text = "Stop Farming"
        farmButton.BackgroundColor3 = Color3.fromRGB(200, 40, 40)
        
        executeResumeFarmStep()
    end
end


-- Toggle Farm Loop
local function toggleOreFarmLoop(farmButton)
    isOreFarmLoopActive = not isOreFarmLoopActive
    
    if isOreFarmLoopActive then
        isWaitingForRockToClear = false
        farmButton.Text = "Stop Farming"
        farmButton.BackgroundColor3 = Color3.fromRGB(200, 40, 40)
        
        local currentRootPart = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if currentRootPart then
            lastPosition = currentRootPart.Position
            print("Starting farm manually. Teleporting to initial position...")
            -- [ใช้ Config]
            instantTeleportTo(Config.FarmInitialPosition) -- ใช้ Teleport เพื่อเริ่มฟาร์มทันที
            task.wait(1) 
            findAndWalkToClosestOre(nil)
        end
        timeStationary = 0
        
        if not inventoryConnection then
            inventoryConnection = inventoryFolder.AttributeChanged:Connect(function(attributeName)
                onInventoryChanged(attributeName, farmButton)
            end)
        end
        
        task.spawn(function()
            task.wait(0.5)
            onInventoryChanged("Rock", farmButton)
        end)
        
    else
        isWaitingForRockToClear = false
        -- [ใช้ Config]
        farmButton.Text = string.format("Farm Ore (%s)", Config.FarmOreKey.Name)
        farmButton.BackgroundColor3 = Color3.fromRGB(0, 170, 80)
        
        if inventoryConnection then
            inventoryConnection:Disconnect()
            inventoryConnection = nil
        end
    end
end

-- ===================================================================
-- [ปรับปรุง] Toggle Sell Loop (เพิ่ม pcall)
-- "ฉลาดขึ้น" โดยการป้องกันไม่ให้ loop หยุดทำงานหากมีข้อผิดพลาดในการขายไอเทมชิ้นเดียว
-- ===================================================================
local function toggleSellLoop(button)
    isSellLoopActive = not isSellLoopActive

    if isSellLoopActive then
        button.Text = "Stop Selling"
        button.BackgroundColor3 = Color3.fromRGB(200, 40, 40) 

        task.spawn(function()
            print("Sell loop started.")
            
            while isSellLoopActive do
                if not NetworkEvent then
                    warn("Sell Loop: NetworkEvent is not available.")
                    isSellLoopActive = false
                    break
                end
                
                if not inventoryFolder then
                    warn("Sell Loop: inventoryFolder is not found.")
                    isSellLoopActive = false
                    break
                end

                -- [ใช้ Config]
                for _, itemName in ipairs(Config.ItemsToSell) do
                    if not isSellLoopActive then break end 
                    
                    local quantity = inventoryFolder:GetAttribute(itemName)
                    
                    if quantity and type(quantity) == "number" and quantity > 0 then
                        -- [เพิ่ม pcall] ป้องกันสคริปต์ล่ม
                        local success, err = pcall(function()
                            print("Selling " .. tostring(quantity) .. " of " .. itemName)
                            NetworkEvent:FireServer("fire", nil, "Economy", itemName, quantity)
                        end)
                        if not success then
                            warn("Failed to sell " .. itemName .. ": ", err)
                        end
                        task.wait(0.1) 
                    end
                end
                
                task.wait(0.5) 
            end
            
            if button and button.Parent then
                -- [ใช้ Config]
                button.Text = string.format("Loop Sell (%s)", Config.SellLoopKey.Name)
                button.BackgroundColor3 = Color3.fromRGB(200, 100, 0) -- Original color
            end
            print("Sell loop stopped.")
        end)
    else
        -- The loop will stop on its own
    end
end

-- ===================================================================
-- Buy/Sell/Walk Functions
-- [ปรับปรุง] "ฉลาดขึ้น" โดยการเดิน (walkToPosition) แทนการเทเลพอร์ต
-- ===================================================================
local function buyFood()
    if not NetworkEvent then warn("NetworkEvent not available for buyFood") return end
    
    print("Walking to food shop...")
    -- [เปลี่ยน] ใช้ walkToPosition เพื่อความปลอดภัย
    -- [ใช้ Config]
    walkToPosition(Config.FoodShopPosition, function() return true end) -- 'onCancelled' คืน true เสมอ
    
    print("At food shop. Buying food...")
    -- [ปรับปรุง] เพิ่ม pcall
    pcall(function()
        NetworkEvent:FireServer("fire", nil, "Supermarket", "Water", 15)
        task.wait(0.2)
        NetworkEvent:FireServer("fire", nil, "Supermarket", "Bread", 15)
    end)
end

local function moveToSellPoint()
    print("Walking to sell point...")
    -- [เปลี่ยน] ใช้ walkToPosition เพื่อความปลอดภัย
    -- [ใช้ Config]
    walkToPosition(Config.SellPointPosition + Vector3.new(0, 3, 0), function() return true end)
end

local function walkToKealoha()
    local targetPlayerName = "KealohaWeaver5712"
    local targetPlayer = Players:FindFirstChild(targetPlayerName)
    
    if not targetPlayer then
        warn("Player " .. targetPlayerName .. " not found in the game.")
        return
    end

    local characterFolder = Workspace:FindFirstChild("Character")
    local targetObject = characterFolder and characterFolder:FindFirstChild(targetPlayer.Name)

    if targetObject then
        local targetPosition
        if targetObject:IsA("Model") and targetObject.PrimaryPart then
            targetPosition = targetObject.PrimaryPart.Position
        elseif targetObject:IsA("BasePart") then
            targetPosition = targetObject.Position
        else
            warn("Could not determine position for target object: '" .. targetObject.Name .. "'")
            return
        end
        
        print("Walking to player: " .. targetPlayer.Name)
        walkToPosition(targetPosition, function() return true end)
    else
        warn("Could not find character object for player: " .. targetPlayer.Name)
    end
end

-- [ปรับปรุง] Death Recovery Function (ใช้ walk แทน teleport)
local function handleDeathAndRecover()
    task.spawn(function()
        if not isOreFarmLoopActive then
            print("Player died, but farm was not active. No recovery action needed.")
            return
        end

        print("DEATH DETECTED! Starting recovery sequence...")
        toggleOreFarmLoop(UIElements.FarmOreButton)
        
        task.wait(3)

        print("Walking to recovery point...")
        -- [เปลี่ยน] ใช้ walkToPosition เพื่อความปลอดภัย
        -- [ใช้ Config]
        walkToPosition(Config.DeathRecoveryPosition, function() return true end) 

        task.wait(3)

        print("Performing post-recovery key press (1 + Shift)...")
        pcall(function()
            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.One, false, game)
            task.wait(0.1)
            VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.One, false, game)
            task.wait(0.5)
            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.LeftShift, false, game)
            task.wait(0.1)
            VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.LeftShift, false, game)
            print("Post-recovery key press completed.")
        end)

        print("Recovery complete. Auto-restarting farm loop...")
        toggleOreFarmLoop(UIElements.FarmOreButton)
    end)
end

-- =============================================
-- Main Execution & Event Connections
-- =============================================
-- Create UIs
UIElements = createControlPanelUI()
diamondCountLabel = createDiamondCounterUI()

-- Setup Logic
setupDiamondCounter(diamondCountLabel)
originalSize = UIElements.ControlPanelFrame.Size 

-- Connect Death Handler
local humanoid = Character:WaitForChild("Humanoid")
humanoid.Died:Connect(handleDeathAndRecover)
print("Death recovery system connected for initial character.")

-- =============================================
-- [ปรับปรุง] Update Loop (RenderStepped)
-- [ใหม่] "ฉลาดขึ้น" ด้วยการตรวจจับว่าแร่ถูกขุดไปแล้วหรือยัง
-- =============================================
RunService.RenderStepped:Connect(function(deltaTime)
    if HumanoidRootPart and not isCollapsed then
        local pos = HumanoidRootPart.Position
        UIElements.CoordinateLabel.Text = string.format("X: %.1f, Y: %.1f, Z: %.1f", pos.X, pos.Y, pos.Z)
    end
    if not isOreFarmLoopActive or not (LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")) then return end
    
    local currentPos = LocalPlayer.Character.HumanoidRootPart.Position
    local isStationary = (currentPos - lastPosition).Magnitude < 0.5

    -- [ใหม่] ตรวจสอบว่าแร่เป้าหมายถูกขุดไปแล้วหรือยัง
    if currentTargetOre and not currentTargetOre.Parent then
        print("Target ore was mined. Finding next ore immediately.")
        currentTargetOre = nil
        timeAtOreStationary = 0
        timeStationary = 0
        findAndWalkToClosestOre(nil)
        return -- เริ่มต้นใหม่ในเฟรมถัดไป
    end

    -- General Anti-Stuck Logic
    if isStationary then
        timeStationary += deltaTime
    else
        timeStationary = 0
        lastPosition = currentPos
    end
    
    -- [ใช้ Config]
    if timeStationary >= Config.GeneralStuckTime then
        print("Anti-Stuck Triggered (General). Re-pathing...")
        findAndWalkToClosestOre(nil)
        timeStationary = 0
        timeAtOreStationary = 0
    end

    -- Ore-specific Anti-Stuck Logic
    if currentTargetOre and currentTargetOre.Parent then
        local distToTarget = (currentPos - currentTargetOre.WorldPivot.Position).Magnitude

        -- [ใช้ Config]
        if isStationary and distToTarget <= Config.AtOreDistanceThreshold then
            timeAtOreStationary += deltaTime
            
            -- [ใช้ Config]
            if timeAtOreStationary >= Config.AtOreStuckTime then
                print("Anti-Stuck Triggered (at Ore). Finding next closest ore...")
                findAndWalkToClosestOre(currentTargetOre)
                timeStationary = 0
                timeAtOreStationary = 0
            end
        else
            timeAtOreStationary = 0
        end
    else
        timeAtOreStationary = 0
    end
end)

-- UI Interactions
local function toggleCollapse()
    isCollapsed = not isCollapsed
    local targetSize = isCollapsed and UDim2.new(originalSize.X.Scale, originalSize.X.Offset, 0, 30) or originalSize

    local contentContainer = ControlPanelFrame:FindFirstChild("ContentContainer")
    local tabContainer = ControlPanelFrame:FindFirstChild("TabContainer")

    if contentContainer then contentContainer.Visible = not isCollapsed end
    if tabContainer then tabContainer.Visible = not isCollapsed end

    UIElements.CollapseButton.Text = isCollapsed and "+" or "-"
    TweenService:Create(ControlPanelFrame, tweenInfo, {Size = targetSize}):Play()
end

local function switchTab(tabName)
    local isControls = (tabName == "Controls")
    UIElements.ControlsContentFrame.Visible = isControls
    UIElements.PlayersContentFrame.Visible = not isControls
    UIElements.ControlsTabButton.BackgroundColor3 = isControls and Color3.fromRGB(60, 60, 80) or Color3.fromRGB(40, 40, 50)
    UIElements.ControlsTabButton.TextColor3 = isControls and Color3.fromRGB(255, 255, 255) or Color3.fromRGB(200, 200, 200)
    UIElements.PlayersTabButton.BackgroundColor3 = not isControls and Color3.fromRGB(60, 60, 80) or Color3.fromRGB(40, 40, 50)
    UIElements.PlayersTabButton.TextColor3 = not isControls and Color3.fromRGB(255, 255, 255) or Color3.fromRGB(200, 200, 200)
end

UIElements.CollapseButton.MouseButton1Click:Connect(toggleCollapse)
UIElements.ControlsTabButton.MouseButton1Click:Connect(function() switchTab("Controls") end)
UIElements.PlayersTabButton.MouseButton1Click:Connect(function() 
    switchTab("Players")
    updatePlayerList()
end)
UIElements.GoButton.MouseButton1Click:Connect(function() moveToCoords(UIElements.InputBox) end)
UIElements.FarmOreButton.MouseButton1Click:Connect(function() toggleOreFarmLoop(UIElements.FarmOreButton) end)
UIElements.BuyFoodButton.MouseButton1Click:Connect(buyFood)
UIElements.MoveToSellButton.MouseButton1Click:Connect(moveToSellPoint)
UIElements.WalkToKealohaButton.MouseButton1Click:Connect(walkToKealoha)
UIElements.SellLoopButton.MouseButton1Click:Connect(function() toggleSellLoop(UIElements.SellLoopButton) end)
-- [ปรับปรุง] ใช้ walkToPosition
UIElements.BlueLabelButton.MouseButton1Click:Connect(function() 
    print("Walking to Blue Label location...")
    -- [เปลี่ยน] ใช้ walkToPosition เพื่อความปลอดภัย
    -- [ใช้ Config]
    walkToPosition(Config.BlueLabelPosition, function() return true end)
end)

-- พับ UI ตอนเริ่มต้น
print("Collapsing UI on start...")
toggleCollapse() 

-- =============================================
-- [ปรับปรุง] Hotkeys (ใช้ Config)
-- =============================================
UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if gameProcessedEvent then return end

    if input.KeyCode == Config.ToggleUIKey then
        UIElements.ScreenGui.Enabled = not UIElements.ScreenGui.Enabled
        
    elseif input.KeyCode == Config.FarmOreKey then
        print("Key " .. Config.FarmOreKey.Name .. " pressed: Toggling Farm Ore")
        toggleOreFarmLoop(UIElements.FarmOreButton)
        
    elseif input.KeyCode == Config.BuyFoodKey or input.KeyCode == Enum.KeyCode.RightAlt then
        print("Key Alt pressed: Buying Food")
        buyFood()
        
    elseif input.KeyCode == Config.SellPointKey then
        print("Key " .. Config.SellPointKey.Name .. " pressed: Moving to Sell Point")
        moveToSellPoint()
        
    elseif input.KeyCode == Config.SellLoopKey then
        print("Key " .. Config.SellLoopKey.Name .. " pressed: Toggling Sell Loop")
        toggleSellLoop(UIElements.SellLoopButton)
        
    elseif input.KeyCode == Config.BlueLabelKey then
        print("Key " .. Config.BlueLabelKey.Name .. " pressed: Moving to Blue Label")
        -- [เปลี่ยน] ใช้ walkToPosition เพื่อความปลอดภัย
        walkToPosition(Config.BlueLabelPosition, function() return true end)
        
    end
end)


--[[
    [ปรับปรุง] ระบบกินอาหาร/น้ำดื่มอัตโนมัติ (ใช้ Config)
]]
task.spawn(function()
    if not NetworkEvent then
        warn("NetworkEvent not found for Smart Auto-Eat loop.")
        return
    end
    if not statusFolder then
        warn("statusFolder not found for Smart Auto-Eat loop.")
        return
    end

    -- [ใช้ Config]
    while task.wait(Config.AutoEatCheckInterval) do 
        -- [ใช้ Config]
        local hungerValue = statusFolder:GetAttribute("Hunger")
        if hungerValue and hungerValue <= Config.AutoEatThreshold then
            print("Hunger is low (" .. string.format("%.2f", hungerValue) .. "), eating bread.")
            pcall(function() NetworkEvent:FireServer("fire", nil, "Use Item", "Bread") end)
            task.wait(2) 
        end

        -- [ใช้ Config]
        local thirstyValue = statusFolder:GetAttribute("Thirsty")
        if thirstyValue and thirstyValue <= Config.AutoEatThreshold then
            print("Thirsty is low (" .. string.format("%.2f", thirstyValue) .. "), drinking water.")
            pcall(function() NetworkEvent:FireServer("fire", nil, "Use Item", "Water") end)
            task.wait(2) 
        end
    end
end)


-- Anti-AFK Loop (ใช้ Config)
task.spawn(function()
    task.wait(60)
    -- [ใช้ Config]
    while task.wait(Config.AntiAFKInterval) do 
        pcall(function()
            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Space, false, game)
            task.wait(0.1)
            VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Space, false, game)
            
            print("Anti-AFK action performed (Spacebar) to prevent disconnection.")
        end)
    end
end)

-- ====================================================================================
-- ลูปตรวจสอบตำแหน่งฟาร์ม (ใช้ Config)
-- ====================================================================================
task.spawn(function()
    -- [ใช้ Config]
    while task.wait(Config.FarmAreaCheckInterval) do 
        if isOreFarmLoopActive and not isWaitingForRockToClear then
            pcall(function()
                local char = LocalPlayer.Character
                local rootPart = char and char:FindFirstChild("HumanoidRootTopPart")
                
                if rootPart then
                    local currentPosition = rootPart.Position
                    -- [ใช้ Config]
                    local farmPoint = Config.FarmInitialPosition 
                    
                    local distance = (currentPosition - farmPoint).Magnitude
                    
                    -- [ใช้ Config]
                    if distance > Config.FarmAreaCheckDistance then
                        print("Player is " .. string.format("%.0f", distance) .. " studs away from the farm point. Walking back...")
                        -- [เปลี่ยน] ใช้ walkToPosition เพื่อความปลอดภัย
                        walkToPosition(farmPoint, function() return isOreFarmLoopActive end)
                    end
                end
            end)
        end
    end
end)


-- ====================================================================================
-- Health-Based Recovery Loop (ใช้ Config และ walkToPosition)
-- ====================================================================================
task.spawn(function()
    if not statusFolder then
        warn("Health-based recovery: Status folder not found.")
        return
    end

    statusFolder.AttributeChanged:Connect(function(attributeName)
        if attributeName == "MaxHealth" then
            local maxHealthValue = statusFolder:GetAttribute("MaxHealth")
            if maxHealthValue and maxHealthValue == 0 then
                
                task.spawn(function()
                    print("MaxHealth reached 0. Initiating special recovery procedure.")

                    if isOreFarmLoopActive then
                        print("Halting ore farming...")
                        toggleOreFarmLoop(UIElements.FarmOreButton)
                        task.wait(0.5)
                    end

                    print("Moving to buy food (Attempt 1)...")
                    buyFood() -- buyFood() ถูกเปลี่ยนให้ใช้ walkToPosition แล้ว

                    print("Waiting for " .. Config.HealthRecoveryWait1 .. " seconds...")
                    task.wait(Config.HealthRecoveryWait1)

                    print("Moving to buy food (Attempt 2)...")
                    buyFood()

                    print("Waiting for " .. Config.HealthRecoveryWait2 .. " seconds...")
                    task.wait(Config.HealthRecoveryWait2)

                    print("Walking to recovery location...")
                    -- [เปลี่ยน] ใช้ walkToPosition
                    -- [ใช้ Config]
                    walkToPosition(Config.HealthRecoveryPosition, function() return true end)

                    print("Waiting for " .. Config.HealthRecoveryWait3 .. " seconds before resuming...")
                    task.wait(Config.HealthRecoveryWait3)

                    if not isOreFarmLoopActive then
                        print("Restarting ore farming...")
                        toggleOreFarmLoop(UIElements.FarmOreButton)
                    end
                    print("Special recovery procedure complete.")
                end)
            end
        end
    end)
    print("Health-based recovery system is active.")
end)


-- Re-establish character parts on respawn
LocalPlayer.CharacterAdded:Connect(function(char)
    Character = char
    HumanoidRootPart = char:WaitForChild("HumanoidRootPart")
    local newHumanoid = char:WaitForChild("Humanoid")
    newHumanoid.Died:Connect(handleDeathAndRecover)
    print("Death recovery system connected for respawned character.")
end)

-- One-time key press when the script starts
task.wait(5) 
print("Performing one-time key press (1 + Shift)...")
pcall(function()
    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.One, false, game)
    task.wait(0.1)
    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.One, false, game)
    task.wait(0.5)
    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.LeftShift, false, game)
    task.wait(0.1)
    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.LeftShift, false, game)
    print("One-time key press completed.")
end)

-- Auto-start the farm loop
print("Auto-starting farm loop...")
toggleOreFarmLoop(UIElements.FarmOreButton)
