-- =============================================
-- Service Definitions
-- =============================================
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local PathfindingService = game:GetService("PathfindingService")

-- =============================================
-- [ADDED] Clean up workspace folder at the start
-- =============================================
local folderToDelete = Workspace:FindFirstChild("Folder")
if folderToDelete then
    folderToDelete:Destroy()
    print("Workspace.Folder has been deleted as requested.")
end

-- Ensure this script only runs on the client
if not RunService:IsClient() then
    return
end

-- =============================================
-- Local Player & Character Setup
-- =============================================
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
local inventoryFolder = LocalPlayer:WaitForChild("Inventory")
local NetworkEvent

-- Safely get NetworkEvent
pcall(function()
    NetworkEvent = ReplicatedStorage:WaitForChild("Modules"):WaitForChild("NetworkFramework"):WaitForChild("NetworkEvent")
end)

-- Clean up old UI if it exists
pcall(function()
    if PlayerGui:FindFirstChild("CoordinateUI") then PlayerGui.CoordinateUI:Destroy() end
    if PlayerGui:FindFirstChild("PlayerTeleportGui") then PlayerGui.PlayerTeleportGui:Destroy() end
    if PlayerGui:FindFirstChild("CombinedControlUI") then PlayerGui.CombinedControlUI:Destroy() end
end)

-- =============================================
-- UI Elements (Global Scope)
-- =============================================
local ControlPanelFrame
local playerListFrame -- For player teleport list

-- =============================================
-- Teleport to Player Logic
-- =============================================
local function teleportToPlayerObject(targetPlayer)
    local localCharacter = LocalPlayer.Character
    local characterFolder = Workspace:FindFirstChild("Character")
    local targetObject = characterFolder and characterFolder:FindFirstChild(targetPlayer.Name)

    if localCharacter and localCharacter:FindFirstChild("HumanoidRootPart") and targetObject then
        local targetPosition
        if targetObject:IsA("Model") and targetObject.PrimaryPart then
            targetPosition = targetObject.PrimaryPart.CFrame.Position
        elseif targetObject:IsA("BasePart") then
            targetPosition = targetObject.Position
        else
            warn("Could not determine position for target object: '" .. targetObject.Name .. "'")
            return
        end

        local success, err = pcall(function()
            print("Teleporting to " .. targetPlayer.Name .. "'s object...")
            localCharacter.HumanoidRootPart.CFrame = CFrame.new(targetPosition + Vector3.new(0, 5, 0))
        end)
        if not success then warn("Teleport failed: ", err) end
    else
        if not targetObject then
            print("Teleport failed: Cannot find object for player '" .. targetPlayer.Name .. "'")
        else
            print("Teleport failed: Local player's character not found.")
        end
    end
end

local function updatePlayerList()
    if not playerListFrame or not playerListFrame.Parent then return end

    local existingButtons = {}
    for _, child in ipairs(playerListFrame:GetChildren()) do
        if child:IsA("TextButton") then existingButtons[child.Name] = child end
    end
    
    local characterFolder = Workspace:FindFirstChild("Character")

    if characterFolder then
        for _, player in ipairs(Players:GetPlayers()) do
            if player == LocalPlayer then continue end
            local targetObject = characterFolder:FindFirstChild(player.Name)
            if targetObject then
                if not existingButtons[player.Name] then
                    local playerButton = Instance.new("TextButton")
                    playerButton.Name = player.Name
                    playerButton.Text = player.DisplayName
                    playerButton.Size = UDim2.new(1, 0, 0, 30)
                    playerButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                    playerButton.TextColor3 = Color3.fromRGB(255, 255, 255)
                    playerButton.Font = Enum.Font.SourceSans
                    playerButton.TextSize = 16
                    playerButton.Parent = playerListFrame
                    playerButton.MouseButton1Click:Connect(function()
                        teleportToPlayerObject(player)
                    end)
                end
                existingButtons[player.Name] = nil
            end
        end
    end

    for _, button in pairs(existingButtons) do
        button:Destroy()
    end
end

-- =============================================
-- UI Creation (Merged)
-- =============================================
local function createUI()
    local ScreenGui = Instance.new("ScreenGui"); ScreenGui.Name = "CombinedControlUI"; ScreenGui.ResetOnSpawn = false; ScreenGui.Parent = PlayerGui
    
    -- Main Draggable Frame
    ControlPanelFrame = Instance.new("Frame"); ControlPanelFrame.Name = "ControlPanelFrame"; ControlPanelFrame.Size = UDim2.new(0, 250, 0, 320); ControlPanelFrame.Position = UDim2.new(0.5, -125, 0.5, -160); ControlPanelFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40); ControlPanelFrame.BorderSizePixel = 0; ControlPanelFrame.Active = true; ControlPanelFrame.Draggable = true; ControlPanelFrame.ClipsDescendants = true; ControlPanelFrame.Parent = ScreenGui
    local UICorner_Main = Instance.new("UICorner", ControlPanelFrame); UICorner_Main.CornerRadius = UDim.new(0, 8)

    -- Title Bar
    local TitleBar = Instance.new("Frame"); TitleBar.Name = "TitleBar"; TitleBar.Size = UDim2.new(1, 0, 0, 30); TitleBar.BackgroundColor3 = Color3.fromRGB(45, 45, 60); TitleBar.BorderSizePixel = 0; TitleBar.Parent = ControlPanelFrame
    local UICorner_Title = Instance.new("UICorner", TitleBar); UICorner_Title.CornerRadius = UDim.new(0, 8)
    local TitleLabel = Instance.new("TextLabel"); TitleLabel.Parent = TitleBar; TitleLabel.Name = "TitleLabel"; TitleLabel.Size = UDim2.new(1, -40, 1, 0); TitleLabel.Position = UDim2.new(0, 10, 0, 0); TitleLabel.BackgroundTransparency = 1; TitleLabel.Font = Enum.Font.SourceSansBold; TitleLabel.Text = "Control Panel"; TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255); TitleLabel.TextSize = 18; TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    local CollapseButton = Instance.new("TextButton"); CollapseButton.Parent = TitleBar; CollapseButton.Name = "CollapseButton"; CollapseButton.Size = UDim2.new(0, 20, 0, 20); CollapseButton.Position = UDim2.new(1, -25, 0.5, -10); CollapseButton.BackgroundColor3 = Color3.fromRGB(60, 60, 75); CollapseButton.Font = Enum.Font.SourceSansBold; CollapseButton.Text = "–"; CollapseButton.TextColor3 = Color3.fromRGB(255, 255, 255); CollapseButton.TextSize = 18
    local UICorner_Collapse = Instance.new("UICorner", CollapseButton); UICorner_Collapse.CornerRadius = UDim.new(0, 4)

    -- Tab Container
    local TabContainer = Instance.new("Frame"); TabContainer.Name = "TabContainer"; TabContainer.Size = UDim2.new(1, 0, 0, 30); TabContainer.Position = UDim2.new(0, 0, 0, 30); TabContainer.BackgroundTransparency = 1; TabContainer.Parent = ControlPanelFrame
    local ControlsTabButton = Instance.new("TextButton"); ControlsTabButton.Name = "ControlsTabButton"; ControlsTabButton.Size = UDim2.new(0.5, 0, 1, 0); ControlsTabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 80); ControlsTabButton.Font = Enum.Font.SourceSansBold; ControlsTabButton.Text = "Controls"; ControlsTabButton.TextColor3 = Color3.fromRGB(255, 255, 255); ControlsTabButton.TextSize = 16; ControlsTabButton.Parent = TabContainer
    local PlayersTabButton = Instance.new("TextButton"); PlayersTabButton.Name = "PlayersTabButton"; PlayersTabButton.Size = UDim2.new(0.5, 0, 1, 0); PlayersTabButton.Position = UDim2.new(0.5, 0, 0, 0); PlayersTabButton.BackgroundColor3 = Color3.fromRGB(40, 40, 50); PlayersTabButton.Font = Enum.Font.SourceSansBold; PlayersTabButton.Text = "Players"; PlayersTabButton.TextColor3 = Color3.fromRGB(200, 200, 200); PlayersTabButton.TextSize = 16; PlayersTabButton.Parent = TabContainer

    -- Content Frames for Tabs
    local ContentContainer = Instance.new("Frame"); ContentContainer.Name = "ContentContainer"; ContentContainer.Size = UDim2.new(1, 0, 1, -60); ContentContainer.Position = UDim2.new(0, 0, 0, 60); ContentContainer.BackgroundTransparency = 1; ContentContainer.Parent = ControlPanelFrame
    
    -- Controls Content
    local ControlsContentFrame = Instance.new("Frame"); ControlsContentFrame.Name = "ControlsContent"; ControlsContentFrame.Size = UDim2.new(1, 0, 1, 0); ControlsContentFrame.BackgroundTransparency = 1; ControlsContentFrame.Parent = ContentContainer; ControlsContentFrame.Visible = true
    local CoordinateLabel = Instance.new("TextLabel"); CoordinateLabel.Parent = ControlsContentFrame; CoordinateLabel.Name = "CoordinateLabel"; CoordinateLabel.Size = UDim2.new(1, -20, 0, 30); CoordinateLabel.Position = UDim2.new(0, 10, 0, 0); CoordinateLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 65); CoordinateLabel.Font = Enum.Font.SourceSansBold; CoordinateLabel.Text = "X: 0.0, Y: 0.0, Z: 0.0"; CoordinateLabel.TextColor3 = Color3.fromRGB(200, 200, 200); CoordinateLabel.TextSize = 16
    local UICorner_CoordLabel = Instance.new("UICorner", CoordinateLabel); UICorner_CoordLabel.CornerRadius = UDim.new(0, 6)
    local InputBox = Instance.new("TextBox"); InputBox.Parent = ControlsContentFrame; InputBox.Name = "InputBox"; InputBox.Size = UDim2.new(1, -70, 0, 30); InputBox.Position = UDim2.new(0, 10, 0, 40); InputBox.BackgroundColor3 = Color3.fromRGB(50, 50, 65); InputBox.Font = Enum.Font.SourceSans; InputBox.Text = "X, Y, Z"; InputBox.TextColor3 = Color3.fromRGB(200, 200, 200); InputBox.TextSize = 16; InputBox.ClearTextOnFocus = true
    local UICorner_InputBox = Instance.new("UICorner", InputBox); UICorner_InputBox.CornerRadius = UDim.new(0, 6)
    local TeleportButton = Instance.new("TextButton"); TeleportButton.Parent = ControlsContentFrame; TeleportButton.Name = "TeleportButton"; TeleportButton.Size = UDim2.new(0, 50, 0, 30); TeleportButton.Position = UDim2.new(1, -60, 0, 40); TeleportButton.BackgroundColor3 = Color3.fromRGB(0, 150, 200); TeleportButton.Font = Enum.Font.SourceSansBold; TeleportButton.Text = "Go"; TeleportButton.TextColor3 = Color3.fromRGB(255, 255, 255); TeleportButton.TextSize = 16
    local UICorner_TeleportBtn = Instance.new("UICorner", TeleportButton); UICorner_TeleportBtn.CornerRadius = UDim.new(0, 6)
    local FarmOreButton = Instance.new("TextButton"); FarmOreButton.Parent = ControlsContentFrame; FarmOreButton.Name = "FarmOreButton"; FarmOreButton.Size = UDim2.new(1, -20, 0, 30); FarmOreButton.Position = UDim2.new(0, 10, 0, 80); FarmOreButton.BackgroundColor3 = Color3.fromRGB(0, 170, 80); FarmOreButton.Font = Enum.Font.SourceSansBold; FarmOreButton.Text = "ฟามแร่"; FarmOreButton.TextColor3 = Color3.fromRGB(255, 255, 255); FarmOreButton.TextSize = 16
    local UICorner_FarmOreBtn = Instance.new("UICorner", FarmOreButton); UICorner_FarmOreBtn.CornerRadius = UDim.new(0, 6)
    local BuyFoodButton = Instance.new("TextButton"); BuyFoodButton.Name = "BuyFoodButton"; BuyFoodButton.Size = UDim2.new(1, -20, 0, 30); BuyFoodButton.Position = UDim2.new(0, 10, 0, 120); BuyFoodButton.BackgroundColor3 = Color3.fromRGB(255, 180, 0); BuyFoodButton.Font = Enum.Font.SourceSansBold; BuyFoodButton.Text = "ซื้ออาหาร"; BuyFoodButton.TextColor3 = Color3.fromRGB(255, 255, 255); BuyFoodButton.TextSize = 16; BuyFoodButton.Parent = ControlsContentFrame
    local UICorner_BuyFoodBtn = Instance.new("UICorner", BuyFoodButton); UICorner_BuyFoodBtn.CornerRadius = UDim.new(0, 6)
    local WalkToSellButton = Instance.new("TextButton"); WalkToSellButton.Name = "WalkToSellButton"; WalkToSellButton.Size = UDim2.new(1, -20, 0, 30); WalkToSellButton.Position = UDim2.new(0, 10, 0, 160); WalkToSellButton.BackgroundColor3 = Color3.fromRGB(150, 50, 200); WalkToSellButton.Font = Enum.Font.SourceSansBold; WalkToSellButton.Text = "เดินไปจุดขาย"; WalkToSellButton.TextColor3 = Color3.fromRGB(255, 255, 255); WalkToSellButton.TextSize = 16; WalkToSellButton.Parent = ControlsContentFrame
    local UICorner_WalkSellBtn = Instance.new("UICorner", WalkToSellButton); UICorner_WalkSellBtn.CornerRadius = UDim.new(0, 6)

    -- Players Content
    local PlayersContentFrame = Instance.new("Frame"); PlayersContentFrame.Name = "PlayersContent"; PlayersContentFrame.Size = UDim2.new(1, 0, 1, 0); PlayersContentFrame.BackgroundTransparency = 1; PlayersContentFrame.Parent = ContentContainer; PlayersContentFrame.Visible = false
    local WarpToKealohaButton = Instance.new("TextButton"); WarpToKealohaButton.Name = "WarpToKealohaButton"; WarpToKealohaButton.Size = UDim2.new(1, -20, 0, 30); WarpToKealohaButton.Position = UDim2.new(0, 10, 0, 5); WarpToKealohaButton.BackgroundColor3 = Color3.fromRGB(220, 120, 0); WarpToKealohaButton.Font = Enum.Font.SourceSansBold; WarpToKealohaButton.Text = "วาปหา KealohaWeaver5712"; WarpToKealohaButton.TextColor3 = Color3.fromRGB(255, 255, 255); WarpToKealohaButton.TextSize = 16; WarpToKealohaButton.Parent = PlayersContentFrame
    local UICorner_WarpKealohaBtn = Instance.new("UICorner", WarpToKealohaButton); UICorner_WarpKealohaBtn.CornerRadius = UDim.new(0, 6)
    playerListFrame = Instance.new("ScrollingFrame"); playerListFrame.Name = "PlayerListFrame"; playerListFrame.Parent = PlayersContentFrame; playerListFrame.Size = UDim2.new(1, -20, 1, -45); playerListFrame.Position = UDim2.new(0, 10, 0, 40); playerListFrame.BackgroundTransparency = 1; playerListFrame.BorderSizePixel = 0; playerListFrame.CanvasSize = UDim2.new(0, 0, 0, 0); playerListFrame.ScrollBarImageColor3 = Color3.fromRGB(180, 180, 180); playerListFrame.ScrollBarThickness = 8
    local listLayout = Instance.new("UIListLayout"); listLayout.Parent = playerListFrame; listLayout.SortOrder = Enum.SortOrder.Name; listLayout.Padding = UDim.new(0, 5); listLayout.FillDirection = Enum.FillDirection.Vertical; listLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center

    return {
        CollapseButton = CollapseButton,
        CoordinateLabel = CoordinateLabel,
        InputBox = InputBox,
        TeleportButton = TeleportButton,
        FarmOreButton = FarmOreButton,
        BuyFoodButton = BuyFoodButton,
        WalkToSellButton = WalkToSellButton,
        WarpToKealohaButton = WarpToKealohaButton,
        ControlsTabButton = ControlsTabButton,
        PlayersTabButton = PlayersTabButton,
        ControlsContentFrame = ControlsContentFrame,
        PlayersContentFrame = PlayersContentFrame
    }
end

-- =============================================
-- Logic & Functions (Merged & Stabilized)
-- =============================================
-- State Variables
local isCollapsed = false
local originalSize = UDim2.new(0, 250, 0, 320)
local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
local isOreFarmLoopActive = false
local inventoryConnection = nil
local isWaitingForRockToClear = false
local lastPosition = Vector3.new()
local timeStationary = 0
local antiStuckThreshold = 5

-- New function to safely create the list of objects to track
local function getObjectsToTrack()
    local trackList = {}
    local farm = Workspace:FindFirstChild("Farm")
    if not farm then
        warn("'Farm' folder not found in Workspace.")
        return trackList
    end

    local rockFolder = farm:FindFirstChild("Rock")
    if not rockFolder then
        warn("'Rock' folder not found in Workspace.Farm.")
        return trackList
    end

    for _, child in ipairs(rockFolder:GetChildren()) do
        if child:IsA("PVInstance") then
            table.insert(trackList, child)
        end
    end
    
    return trackList
end

-- ฟังก์ชันเดินไปหาแร่ให้ใช้ Pathfinding ที่ฉลาดขึ้น
local function findAndWalkToClosest()
    local character = LocalPlayer.Character
    if not character then return end
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    
    if not (humanoid and rootPart and humanoid.Health > 0 and isOreFarmLoopActive) then return end

    task.wait(0.5)

    local objectsToTrack = getObjectsToTrack()
    if #objectsToTrack == 0 then
        warn("No objects to track were found. Aborting walk.")
        return
    end

    local closestObject, minDistance = nil, math.huge
    for _, obj in ipairs(objectsToTrack) do
        if obj and obj.Parent then
            local dist = (rootPart.Position - obj.WorldPivot.Position).Magnitude
            if dist < minDistance then
                minDistance, closestObject = dist, obj
            end
        end
    end

    if closestObject then
        print("Walking to closest object:", closestObject:GetFullName(), ". Calculating path...")
        
        local agentParameters = { AgentRadius = 3, AgentHeight = 6, AgentCanJump = true }
        local path = PathfindingService:CreatePath(agentParameters)
        
        local success, errorMessage = pcall(function()
            path:ComputeAsync(rootPart.Position, closestObject.WorldPivot.Position)
        end)

        if success and path.Status == Enum.PathStatus.Success then
            print("คำนวณเส้นทางสำเร็จ กำลังเดินตามจุด...")
            local waypoints = path:GetWaypoints()
            
            local pathBlockedConnection
            local function onPathBlocked(blockedWaypointIndex)
                if blockedWaypointIndex < #waypoints then
                    print("เส้นทางถูกบล็อกที่จุด " .. blockedWaypointIndex .. ". กำลังคำนวณใหม่...")
                    if pathBlockedConnection then pathBlockedConnection:Disconnect() end
                    findAndWalkToClosest()
                end
            end
            pathBlockedConnection = path.Blocked:Connect(onPathBlocked)

            for i, waypoint in ipairs(waypoints) do
                if not isOreFarmLoopActive then
                    print("Farming stopped mid-path. Aborting walk.")
                    break
                end
                humanoid:MoveTo(waypoint.Position)
                humanoid.MoveToFinished:Wait()
            end
            
            if pathBlockedConnection then pathBlockedConnection:Disconnect() end
            print("Reached destination or path ended.")
        else
            warn("การคำนวณเส้นทางหาแร่ล้มเหลว: ", errorMessage or "No viable path.", "ใช้การเดินแบบตรงแทน")
            humanoid:MoveTo(closestObject.WorldPivot.Position)
        end
    else
        warn("Could not find any valid objects to walk to.")
    end
end

-- Teleport to Coords
local function teleportPlayer(inputBox)
    local currentCharacter = LocalPlayer.Character
    local currentRootPart = currentCharacter and currentCharacter:FindFirstChild("HumanoidRootPart")
    if not currentRootPart then
        inputBox.Text = "Error: Character not found"
        return
    end

    local parts = inputBox.Text:split(",")
    if #parts == 3 then
        local x, y, z = tonumber(parts[1]), tonumber(parts[2]), tonumber(parts[3])
        if x and y and z then
            currentRootPart.CFrame = CFrame.new(x, y, z)
            inputBox.Text = ""
        else
            inputBox.Text = "Error: Invalid Format"
        end
    else
        inputBox.Text = "Error: Use X,Y,Z"
    end
end

-- พิกัดจุดฟามเริ่มต้น
local initialFarmPosition = CFrame.new(-339, 40, -2713)
-- พิกัดจุดฟามหลัง Process
local postProcessFarmPosition = CFrame.new(-332, 35, -2680)

-- Farm Step สำหรับการฟามต่ออัตโนมัติ
local function executeResumeFarmStep()
    local currentRootPart = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not currentRootPart or not isOreFarmLoopActive then return end
    currentRootPart.CFrame = postProcessFarmPosition -- ใช้พิกัดหลัง Process
    task.wait(0.1)
    findAndWalkToClosest()
end

-- [[ ปรับปรุงตามคำขอ ]] ฟังก์ชันสำหรับตรวจสอบการเปลี่ยนแปลงใน Inventory
local function onInventoryChanged(attributeName, farmButton)
    if not inventoryFolder then return end
    
    local rockCount = inventoryFolder:GetAttribute("Rock") or 0

    -- เงื่อนไขที่ 1: ถ้ากำลังฟามอยู่ และหินครบ 100 ให้เริ่ม Process
    if isOreFarmLoopActive and not isWaitingForRockToClear and rockCount >= 100 then
        isWaitingForRockToClear = true
        isOreFarmLoopActive = false -- หยุดการหาแร่ชั่วคราว

        farmButton.Text = "รอ Rock หมด..."
        farmButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
        
        print("Rock count reached 100. Preparing to warp and process.")
        
        local currentRootPart = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        
        if currentRootPart then
            print("Player character found. Current position:", currentRootPart.Position)
            print("Warping to process point at:", postProcessFarmPosition.Position)
            
            -- << [MODIFIED] เปลี่ยนลำดับ: วาปก่อนแล้วค่อย Process
            currentRootPart.CFrame = postProcessFarmPosition -- วาปไปจุด Process
            
            print("Teleport command issued. Waiting 4 seconds...")
            task.wait(4) -- << [MODIFIED] รอ 4 วินาทีเพื่อให้แน่ใจว่าวาปทำงานแล้ว
            
            print("Wait finished. Position after warp:", currentRootPart.Position)
            print("Now sending 'Process' command to server...")
            NetworkEvent:FireServer("fire", nil, "Process", "Rock")
        else
            warn("Could not find HumanoidRootPart to warp. Cannot process.")
        end
        
    -- เงื่อนไขที่ 2: ถ้ากำลังรอหินหมด และหินกลายเป็น 0 ให้กลับไปฟามต่อ
    elseif isWaitingForRockToClear and rockCount == 0 then
        print("Rock inventory cleared. Waiting 5 seconds before resuming farming...")
        task.wait(5) -- <<<< [แก้ไข] เพิ่มการรอ 5 วินาที

        -- ตรวจสอบว่าผู้ใช้ยกเลิกระหว่างรอหรือไม่
        if not isWaitingForRockToClear then
            print("Farming was cancelled during the wait. Aborting resume.")
            return
        end
        
        print("Resuming farming...")
        isWaitingForRockToClear = false
        isOreFarmLoopActive = true -- กลับมาฟามต่อ

        farmButton.Text = "หยุดฟามแร่"
        farmButton.BackgroundColor3 = Color3.fromRGB(200, 40, 40)
        
        executeResumeFarmStep() -- เริ่มหาแร่ ณ จุดหลัง Process
    end
end


-- Toggle Farm Loop
local function toggleOreFarmLoop(farmButton)
    isOreFarmLoopActive = not isOreFarmLoopActive
    
    if isOreFarmLoopActive then
        isWaitingForRockToClear = false
        farmButton.Text = "หยุดฟามแร่"
        farmButton.BackgroundColor3 = Color3.fromRGB(200, 40, 40)
        
        local currentRootPart = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if currentRootPart then
            lastPosition = currentRootPart.Position
            -- วาปไปยังจุดเริ่มต้นเมื่อกดปุ่มฟามครั้งแรก
            print("Starting farm manually. Teleporting to initial position...")
            currentRootPart.CFrame = initialFarmPosition
            task.wait(0.1)
            findAndWalkToClosest()
        end
        timeStationary = 0
        
        if not inventoryConnection then
            inventoryConnection = inventoryFolder.AttributeChanged:Connect(function(attributeName)
                onInventoryChanged(attributeName, farmButton)
            end)
        end
        
        -- ตรวจสอบครั้งแรกเผื่อมีหินเกิน 100 อยู่แล้ว
        task.spawn(function()
            task.wait(0.5)
            onInventoryChanged("Rock", farmButton)
        end)
        
    else
        isWaitingForRockToClear = false
        farmButton.Text = "ฟามแร่"
        farmButton.BackgroundColor3 = Color3.fromRGB(0, 170, 80)
        
        if inventoryConnection then
            inventoryConnection:Disconnect()
            inventoryConnection = nil
        end
    end
end

-- Buy/Sell/Walk Functions
local function buyFood()
    if not NetworkEvent then warn("NetworkEvent not available for buyFood") return end
    local currentRootPart = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not currentRootPart then return end
    currentRootPart.CFrame = CFrame.new(3000, 16, 2280)
    task.wait(0.2)
    NetworkEvent:FireServer("fire", nil, "Supermarket", "Water", 15)
    task.wait(0.2)
    NetworkEvent:FireServer("fire", nil, "Supermarket", "Bread", 15)
end

-- ฟังก์ชันเดินไปจุดขายให้ฉลาดขึ้น
local function walkToSellPoint()
    local character = LocalPlayer.Character
    if not character then return end
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    if not (humanoid and rootPart) then return end

    local destination = Vector3.new(2853.1, 14.5, 2108.9)
    
    local agentParameters = { AgentRadius = 3, AgentHeight = 6, AgentCanJump = true }
    local path = PathfindingService:CreatePath(agentParameters)

    local success, errorMessage = pcall(function()
        path:ComputeAsync(rootPart.Position, destination)
    end)

    if success and path.Status == Enum.PathStatus.Success then
        print("คำนวณเส้นทางไปยังจุดขายสำเร็จ กำลังเดินตามจุด...")
        local waypoints = path:GetWaypoints()
        
        local pathBlockedConnection
        local function onPathBlocked(blockedWaypointIndex)
            if blockedWaypointIndex < #waypoints then
                print("เส้นทางไปยังจุดขายถูกบล็อก กำลังคำนวณใหม่...")
                if pathBlockedConnection then pathBlockedConnection:Disconnect() end
                walkToSellPoint() -- Restart the walk
            end
        end
        pathBlockedConnection = path.Blocked:Connect(onPathBlocked)

        for _, waypoint in ipairs(waypoints) do
            humanoid:MoveTo(waypoint.Position)
            humanoid.MoveToFinished:Wait()
        end
        
        if pathBlockedConnection then pathBlockedConnection:Disconnect() end
        print("ถึงจุดขายเรียบร้อยแล้ว")
    else
        warn("การคำนวณเส้นทางไปจุดขายล้มเหลว: ", errorMessage or "No path found.", "ใช้การเดินแบบตรงแทน")
        humanoid:MoveTo(destination)
    end
end

local function warpToKealoha()
    local targetPlayerName = "KealohaWeaver5712"
    local targetPlayer = Players:FindFirstChild(targetPlayerName)
    
    if targetPlayer then
        print("Found player " .. targetPlayerName .. ". Attempting to teleport.")
        teleportToPlayerObject(targetPlayer)
    else
        warn("Player " .. targetPlayerName .. " not found in the game.")
    end
end

-- =============================================
-- Main Execution & Event Connections
-- =============================================
local UIElements = createUI()

-- Update Loop
RunService.RenderStepped:Connect(function(deltaTime)
    if HumanoidRootPart and not isCollapsed then
        local pos = HumanoidRootPart.Position
        UIElements.CoordinateLabel.Text = string.format("X: %.1f, Y: %.1f, Z: %.1f", pos.X, pos.Y, pos.Z)
    end
    if not isOreFarmLoopActive or not (LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")) then return end
    local currentPos = LocalPlayer.Character.HumanoidRootPart.Position
    if (currentPos - lastPosition).Magnitude < 0.5 then
        timeStationary += deltaTime
    else
        timeStationary = 0
        lastPosition = currentPos
    end
    if timeStationary >= antiStuckThreshold then
        print("Anti-Stuck Triggered. Re-pathing...")
        findAndWalkToClosest()
        timeStationary = 0
    end
end)

-- UI Interactions
local function toggleCollapse()
    isCollapsed = not isCollapsed
    local targetSize = isCollapsed and UDim2.new(originalSize.X.Scale, originalSize.X.Offset, 0, 30) or originalSize

    local contentContainer = ControlPanelFrame:FindFirstChild("ContentContainer")
    local tabContainer = ControlPanelFrame:FindFirstChild("TabContainer")

    if contentContainer then contentContainer.Visible = not isCollapsed end
    if tabContainer then tabContainer.Visible = not isCollapsed end

    UIElements.CollapseButton.Text = isCollapsed and "+" or "–"
    TweenService:Create(ControlPanelFrame, tweenInfo, {Size = targetSize}):Play()
end

local function switchTab(tabName)
    local isControls = (tabName == "Controls")
    UIElements.ControlsContentFrame.Visible = isControls
    UIElements.PlayersContentFrame.Visible = not isControls
    UIElements.ControlsTabButton.BackgroundColor3 = isControls and Color3.fromRGB(60, 60, 80) or Color3.fromRGB(40, 40, 50)
    UIElements.ControlsTabButton.TextColor3 = isControls and Color3.fromRGB(255, 255, 255) or Color3.fromRGB(200, 200, 200)
    UIElements.PlayersTabButton.BackgroundColor3 = not isControls and Color3.fromRGB(60, 60, 80) or Color3.fromRGB(40, 40, 50)
    UIElements.PlayersTabButton.TextColor3 = not isControls and Color3.fromRGB(255, 255, 255) or Color3.fromRGB(200, 200, 200)
end

UIElements.CollapseButton.MouseButton1Click:Connect(toggleCollapse)
UIElements.ControlsTabButton.MouseButton1Click:Connect(function() switchTab("Controls") end)
UIElements.PlayersTabButton.MouseButton1Click:Connect(function() switchTab("Players") end)
UIElements.TeleportButton.MouseButton1Click:Connect(function() teleportPlayer(UIElements.InputBox) end)
UIElements.FarmOreButton.MouseButton1Click:Connect(function() toggleOreFarmLoop(UIElements.FarmOreButton) end)
UIElements.BuyFoodButton.MouseButton1Click:Connect(buyFood)
UIElements.WalkToSellButton.MouseButton1Click:Connect(walkToSellPoint)
UIElements.WarpToKealohaButton.MouseButton1Click:Connect(warpToKealoha)

-- Auto-Eat/Drink Loop
if NetworkEvent then
    task.spawn(function()
        while true do
            task.wait(1200) -- 20 minutes
            if LocalPlayer.Character then
                NetworkEvent:FireServer("fire", nil, "Use Item", "Bread")
                task.wait(10)
                NetworkEvent:FireServer("fire", nil, "Use Item", "Water")
            end
        end
    end)
end

-- Player List Update Connections
Players.PlayerAdded:Connect(updatePlayerList)
Players.PlayerRemoving:Connect(updatePlayerList)
local characterFolder = Workspace:FindFirstChild("Character")
if characterFolder then
    characterFolder.ChildAdded:Connect(updatePlayerList)
    characterFolder.ChildRemoved:Connect(updatePlayerList)
end
Workspace.ChildAdded:Connect(function(child)
    if child.Name == "Character" then
        child.ChildAdded:Connect(updatePlayerList)
        child.ChildRemoved:Connect(updatePlayerList)
        updatePlayerList()
    end
end)

-- Initial population
updatePlayerList()

-- Re-establish character parts on respawn
LocalPlayer.CharacterAdded:Connect(function(char)
    Character = char
    HumanoidRootPart = char:WaitForChild("HumanoidRootPart")
end)

print("Updated Control Panel UI Loaded Successfully. 🛠️")


