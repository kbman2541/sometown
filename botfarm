-- =============================================
-- Settings
-- =============================================
local DIAMOND_ATTRIBUTE_NAME = "Diamond" -- Attribute to display on the counter UI.
local CASH_ATTRIBUTE_NAME = "Bank" -- [CHANGED] Attribute for Bank ( geändert von "Text" zu "Bank" wie gewünscht )
local REAL_CASH_ATTRIBUTE_NAME = "Cash" -- [NEW] Attribute for real cash

-- =============================================
-- Service Definitions
-- =============================================
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local PathfindingService = game:GetService("PathfindingService")

-- =============================================
-- [NEW] Anti-Cheat Bypass
-- This section attempts to prevent other scripts from teleporting or kicking the player,
-- which can happen if an anti-cheat script detects the fast movement from this script.
-- It works by intercepting calls to TeleportService and blocking them.
-- =============================================
pcall(function()
    local TeleportService = game:GetService("TeleportService")
    local mt = getrawmetatable(TeleportService)
    local oldIndex = mt.__index

    -- We replace the __index metamethod. This function is called whenever a script tries
    -- to access a method of TeleportService (like "Teleport" or "TeleportAsync").
    setmetatable(TeleportService, {
        __index = function(self, key)
            -- Check if the key being accessed is one of the teleport functions.
            if key == "Teleport" or key == "TeleportAsync" or key == "TeleportToPrivateServer" or key == "TeleportToPlaceInstance" then
                -- If it is, we return a new, empty function instead of the real one.
                -- This effectively blocks the teleport call from ever happening.
                return function(...)
                    warn("A script attempted to teleport the player (Reason: " .. tostring(key) .. "). Call was blocked by UpdatedMovementScript.lua to prevent a kick.")
                end
            end
            -- If it's any other property or method, we let it proceed as normal using the original __index.
            return oldIndex(self, key)
        end
    })
    print("Anti-teleport bypass initialized successfully.")
end)

-- =============================================
-- [MODIFIED] Make workspace.Folder cleanup more robust
-- =============================================
-- Initial check in case the folder already exists at script start
local existingFolder = Workspace:FindFirstChild("Folder")
if existingFolder then
    existingFolder:Destroy()
    print("Workspace.Folder found on startup and was deleted.")
end

-- Listen for the folder being added in the future to ensure it's always deleted
Workspace.ChildAdded:Connect(function(child)
    if child.Name == "Folder" then
        task.wait() -- Allow the object to be fully parented before destroying
        child:Destroy()
        print("Workspace.Folder was added and has now been deleted.")
    end
end)


-- Ensure this script only runs on the client
if not RunService:IsClient() then
    return
end

-- =============================================
-- Local Player & Character Setup
-- =============================================
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
local inventoryFolder = LocalPlayer:WaitForChild("Inventory")
local statusFolder = LocalPlayer:WaitForChild("Status") -- [NEW]
local NetworkEvent

-- Safely get NetworkEvent
pcall(function()
    NetworkEvent = ReplicatedStorage:WaitForChild("Modules"):WaitForChild("NetworkFramework"):WaitForChild("NetworkEvent")
end)

-- Clean up old UI if it exists
pcall(function()
    if PlayerGui:FindFirstChild("CoordinateUI") then PlayerGui.CoordinateUI:Destroy() end
    if PlayerGui:FindFirstChild("PlayerTeleportGui") then PlayerGui.PlayerTeleportGui:Destroy() end
    if PlayerGui:FindFirstChild("CombinedControlUI") then PlayerGui.CombinedControlUI:Destroy() end
    if PlayerGui:FindFirstChild("ItemCounterGui") then PlayerGui.ItemCounterGui:Destroy() end -- Cleanup for diamond counter
end)

-- =============================================
-- UI Elements (Global Scope)
-- =============================================
local UIElements 
local ControlPanelFrame
local playerListFrame 

-- =============================================
-- [เปลี่ยน] ฟังก์ชันเคลื่อนที่ด้วยการเทเลพอร์ต
-- ฟังก์ชันนี้ถูกเปลี่ยนจากการบินมาเป็นการเทเลพอร์ตทันที
-- =============================================
local function teleportTo(destinationPosition)
    task.spawn(function()
        local character = LocalPlayer.Character
        local rootPart = character and character:FindFirstChild("HumanoidRootPart")
        if not rootPart then
            warn("teleportTo failed: Character or HumanoidRootPart not found.")
            return
        end

        -- [NEW] เพิ่มความสูง 5 studs เพื่อป้องกันการตกแมพ
        local finalPosition = destinationPosition + Vector3.new(0, 5, 0)

        -- ย้ายตัวละครทันทีโดยการตั้งค่า CFrame
        rootPart.CFrame = CFrame.new(finalPosition)
        print("Teleported to " .. tostring(finalPosition))
    end)
end


-- =============================================
-- Teleport to Player Logic
-- =============================================
local function moveToPlayerObject(targetPlayer)
    local localCharacter = LocalPlayer.Character
    local characterFolder = Workspace:FindFirstChild("Character")
    local targetObject = characterFolder and characterFolder:FindFirstChild(targetPlayer.Name)

    if localCharacter and localCharacter:FindFirstChild("HumanoidRootPart") and targetObject then
        local targetPosition
        if targetObject:IsA("Model") and targetObject.PrimaryPart then
            targetPosition = targetObject.PrimaryPart.CFrame.Position
        elseif targetObject:IsA("BasePart") then
            targetPosition = targetObject.Position
        else
            warn("Could not determine position for target object: '" .. targetObject.Name .. "'")
            return
        end

        local success, err = pcall(function()
            print("Teleporting to " .. targetPlayer.Name .. "'s object...")
            -- [REMOVED] ลบ offset เดิม (Vector3.new(0, 5, 0)) ออก เพราะ `teleportTo` จะเพิ่มให้เอง
            teleportTo(targetPosition)
        end)
        if not success then warn("Movement failed: ", err) end
    else
        if not targetObject then
            print("Movement failed: Cannot find object for player '" .. targetPlayer.Name .. "'")
        else
            print("Movement failed: Local player's character not found.")
        end
    end
end

local function updatePlayerList()
    if not playerListFrame or not playerListFrame.Parent then return end

    local existingButtons = {}
    for _, child in ipairs(playerListFrame:GetChildren()) do
        if child:IsA("TextButton") then existingButtons[child.Name] = child end
    end
    
    local characterFolder = Workspace:FindFirstChild("Character")

    if characterFolder then
        for _, player in ipairs(Players:GetPlayers()) do
            if player == LocalPlayer then continue end
            local targetObject = characterFolder:FindFirstChild(player.Name)
            if targetObject then
                if not existingButtons[player.Name] then
                    local playerButton = Instance.new("TextButton")
                    playerButton.Name = player.Name
                    playerButton.Text = player.DisplayName
                    playerButton.Size = UDim2.new(1, 0, 0, 30)
                    playerButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                    playerButton.TextColor3 = Color3.fromRGB(255, 255, 255)
                    playerButton.Font = Enum.Font.SourceSans
                    playerButton.TextSize = 16
                    playerButton.Parent = playerListFrame
                    playerButton.MouseButton1Click:Connect(function()
                        moveToPlayerObject(player)
                    end)
                end
                existingButtons[player.Name] = nil
            end
        end
    end

    for _, button in pairs(existingButtons) do
        button:Destroy()
    end
end

-- =============================================
-- UI Creation Functions
-- =============================================

-- [MODIFIED] UI Creation for Diamond, Bank, and Cash Counters
local function createCountersUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ItemCounterGui"
    screenGui.ResetOnSpawn = false
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    -- New size for three counters
    local frameWidth = 200
    local frameHeight = 130 -- [CHANGED] Increased height
    
    local shadowFrame = Instance.new("Frame")
    shadowFrame.Name = "ShadowFrame"
    shadowFrame.BackgroundColor3 = Color3.new(0, 0, 0)
    shadowFrame.BackgroundTransparency = 0.6
    shadowFrame.BorderSizePixel = 0
    shadowFrame.AnchorPoint = Vector2.new(1, 0) -- Top-right
    shadowFrame.Position = UDim2.new(1, -15 + 3, 0, 15 + 3) -- Position from right
    shadowFrame.Size = UDim2.new(0, frameWidth, 0, frameHeight)
    shadowFrame.ZIndex = 1
    shadowFrame.Parent = screenGui
    
    local shadowCorner = Instance.new("UICorner")
    shadowCorner.CornerRadius = UDim.new(0, 12)
    shadowCorner.Parent = shadowFrame
    
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "CounterFrame"
    mainFrame.BackgroundColor3 = Color3.fromRGB(40, 42, 54)
    mainFrame.BorderColor3 = Color3.fromRGB(140, 140, 140)
    mainFrame.BorderSizePixel = 1
    mainFrame.AnchorPoint = Vector2.new(1, 0) -- Top-right
    mainFrame.Position = UDim2.new(1, -15, 0, 15) -- Position from right
    mainFrame.Size = UDim2.new(0, frameWidth, 0, frameHeight)
    mainFrame.ZIndex = 2
    mainFrame.Parent = screenGui
    
    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0, 12)
    uiCorner.Parent = mainFrame
    
    -- Diamond Title (Top Left)
    local diamondTitleLabel = Instance.new("TextLabel")
    diamondTitleLabel.Name = "DiamondTitle"
    diamondTitleLabel.Text = DIAMOND_ATTRIBUTE_NAME .. ":"
    diamondTitleLabel.TextColor3 = Color3.fromRGB(248, 248, 242)
    diamondTitleLabel.BackgroundTransparency = 1
    diamondTitleLabel.Font = Enum.Font.SourceSansBold
    diamondTitleLabel.TextSize = 20 -- Reduced size
    diamondTitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    diamondTitleLabel.Position = UDim2.new(0, 15, 0, 10) -- Top position
    diamondTitleLabel.Size = UDim2.new(1, -95, 0, 30)
    diamondTitleLabel.AnchorPoint = Vector2.new(0, 0)
    diamondTitleLabel.Parent = mainFrame
    
    -- Diamond Count (Top Right)
    local diamondCountLabel = Instance.new("TextLabel")
    diamondCountLabel.Name = "DiamondCount"
    diamondCountLabel.Text = "..."
    diamondCountLabel.TextColor3 = Color3.fromRGB(255, 255, 100)
    diamondCountLabel.BackgroundTransparency = 1
    diamondCountLabel.Font = Enum.Font.SourceSansBold
    diamondCountLabel.TextSize = 22 -- Reduced size
    diamondCountLabel.TextXAlignment = Enum.TextXAlignment.Right
    diamondCountLabel.Position = UDim2.new(1, -15, 0, 10) -- Top position
    diamondCountLabel.Size = UDim2.new(0, 80, 0, 30)
    diamondCountLabel.AnchorPoint = Vector2.new(1, 0)
    diamondCountLabel.Parent = mainFrame
    
    -- Bank Title (Middle Left)
    local bankTitleLabel = Instance.new("TextLabel")
    bankTitleLabel.Name = "BankTitle"
    bankTitleLabel.Text = CASH_ATTRIBUTE_NAME .. ":" -- Will show "Bank:"
    bankTitleLabel.TextColor3 = Color3.fromRGB(248, 248, 242)
    bankTitleLabel.BackgroundTransparency = 1
    bankTitleLabel.Font = Enum.Font.SourceSansBold
    bankTitleLabel.TextSize = 20 -- Reduced size
    bankTitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    bankTitleLabel.Position = UDim2.new(0, 15, 0, 50) -- Middle position
    bankTitleLabel.Size = UDim2.new(1, -95, 0, 30)
    bankTitleLabel.AnchorPoint = Vector2.new(0, 0)
    bankTitleLabel.Parent = mainFrame
    
    -- Bank Count (Middle Right)
    local bankCountLabel = Instance.new("TextLabel")
    bankCountLabel.Name = "BankCount"
    bankCountLabel.Text = "..."
    bankCountLabel.TextColor3 = Color3.fromRGB(100, 255, 100) -- Green for bank
    bankCountLabel.BackgroundTransparency = 1
    bankCountLabel.Font = Enum.Font.SourceSansBold
    bankCountLabel.TextSize = 22 -- Reduced size
    bankCountLabel.TextXAlignment = Enum.TextXAlignment.Right
    bankCountLabel.Position = UDim2.new(1, -15, 0, 50) -- Middle position
    bankCountLabel.Size = UDim2.new(0, 80, 0, 30)
    bankCountLabel.AnchorPoint = Vector2.new(1, 0)
    bankCountLabel.Parent = mainFrame
    
    -- [NEW] Cash Title (Bottom Left)
    local cashTitleLabel = Instance.new("TextLabel")
    cashTitleLabel.Name = "CashTitle"
    cashTitleLabel.Text = REAL_CASH_ATTRIBUTE_NAME .. ":" -- Will show "Cash:"
    cashTitleLabel.TextColor3 = Color3.fromRGB(248, 248, 242)
    cashTitleLabel.BackgroundTransparency = 1
    cashTitleLabel.Font = Enum.Font.SourceSansBold
    cashTitleLabel.TextSize = 20 -- Reduced size
    cashTitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    cashTitleLabel.Position = UDim2.new(0, 15, 0, 90) -- Bottom position
    cashTitleLabel.Size = UDim2.new(1, -95, 0, 30)
    cashTitleLabel.AnchorPoint = Vector2.new(0, 0)
    cashTitleLabel.Parent = mainFrame
    
    -- [NEW] Cash Count (Bottom Right)
    local cashCountLabel = Instance.new("TextLabel")
    cashCountLabel.Name = "CashCount"
    cashCountLabel.Text = "..."
    cashCountLabel.TextColor3 = Color3.fromRGB(100, 255, 100) -- Green for cash
    cashCountLabel.BackgroundTransparency = 1
    cashCountLabel.Font = Enum.Font.SourceSansBold
    cashCountLabel.TextSize = 22 -- Reduced size
    cashCountLabel.TextXAlignment = Enum.TextXAlignment.Right
    cashCountLabel.Position = UDim2.new(1, -15, 0, 90) -- Bottom position
    cashCountLabel.Size = UDim2.new(0, 80, 0, 30)
    cashCountLabel.AnchorPoint = Vector2.new(1, 0)
    cashCountLabel.Parent = mainFrame
    
    screenGui.Parent = PlayerGui
    
    -- Return all three labels
    return { diamond = diamondCountLabel, bank = bankCountLabel, cash = cashCountLabel }
end

-- Control Panel UI Creation (Responsive)
local function createControlPanelUI()
    local ScreenGui = Instance.new("ScreenGui"); ScreenGui.Name = "CombinedControlUI"; ScreenGui.ResetOnSpawn = false; ScreenGui.Parent = PlayerGui

    -- [MODIFIED] Increased height for the new button
    local frameHeight = 440 -- เพิ่มความสูง 40 (จาก 400)
    
    -- Main Draggable Frame
    ControlPanelFrame = Instance.new("Frame"); ControlPanelFrame.Name = "ControlPanelFrame";
    ControlPanelFrame.Size = UDim2.new(0, 250, 0, frameHeight)
    ControlPanelFrame.Position = UDim2.new(0.5, 0, 0.5, 0);
    ControlPanelFrame.AnchorPoint = Vector2.new(0.5, 0.5); -- Center the frame
    ControlPanelFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40); ControlPanelFrame.BorderSizePixel = 0; ControlPanelFrame.Active = true; ControlPanelFrame.Draggable = true; ControlPanelFrame.ClipsDescendants = true; ControlPanelFrame.Parent = ScreenGui
    local UICorner_Main = Instance.new("UICorner", ControlPanelFrame); UICorner_Main.CornerRadius = UDim.new(0, 8)

    -- Title Bar
    local TitleBar = Instance.new("Frame"); TitleBar.Name = "TitleBar"; TitleBar.Size = UDim2.new(1, 0, 0, 30); TitleBar.BackgroundColor3 = Color3.fromRGB(45, 45, 60); TitleBar.BorderSizePixel = 0; TitleBar.Parent = ControlPanelFrame
    local UICorner_Title = Instance.new("UICorner", TitleBar); UICorner_Title.CornerRadius = UDim.new(0, 8)
    local TitleLabel = Instance.new("TextLabel"); TitleLabel.Parent = TitleBar; TitleLabel.Name = "TitleLabel"; TitleLabel.Size = UDim2.new(1, -40, 1, 0); TitleLabel.Position = UDim2.new(0, 10, 0, 0); TitleLabel.BackgroundTransparency = 1; TitleLabel.Font = Enum.Font.SourceSansBold; TitleLabel.Text = "Control Panel"; TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255); TitleLabel.TextSize = 18; TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    local CollapseButton = Instance.new("TextButton"); CollapseButton.Parent = TitleBar; CollapseButton.Name = "CollapseButton"; CollapseButton.Size = UDim2.new(0, 20, 0, 20); CollapseButton.Position = UDim2.new(1, -25, 0.5, -10); CollapseButton.BackgroundColor3 = Color3.fromRGB(60, 60, 75); CollapseButton.Font = Enum.Font.SourceSansBold; CollapseButton.Text = "-"; CollapseButton.TextColor3 = Color3.fromRGB(255, 255, 255); CollapseButton.TextSize = 18
    local UICorner_Collapse = Instance.new("UICorner", CollapseButton); UICorner_Collapse.CornerRadius = UDim.new(0, 4)

    -- Tab Container
    local TabContainer = Instance.new("Frame"); TabContainer.Name = "TabContainer"; TabContainer.Size = UDim2.new(1, 0, 0, 30); TabContainer.Position = UDim2.new(0, 0, 0, 30); TabContainer.BackgroundTransparency = 1; TabContainer.Parent = ControlPanelFrame
    local ControlsTabButton = Instance.new("TextButton"); ControlsTabButton.Name = "ControlsTabButton"; ControlsTabButton.Size = UDim2.new(0.5, 0, 1, 0); ControlsTabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 80); ControlsTabButton.Font = Enum.Font.SourceSansBold; ControlsTabButton.Text = "Controls"; ControlsTabButton.TextColor3 = Color3.fromRGB(255, 255, 255); ControlsTabButton.TextSize = 16; ControlsTabButton.Parent = TabContainer
    local PlayersTabButton = Instance.new("TextButton"); PlayersTabButton.Name = "PlayersTabButton"; PlayersTabButton.Size = UDim2.new(0.5, 0, 1, 0); PlayersTabButton.Position = UDim2.new(0.5, 0, 0, 0); PlayersTabButton.BackgroundColor3 = Color3.fromRGB(40, 40, 50); PlayersTabButton.Font = Enum.Font.SourceSansBold; PlayersTabButton.Text = "Players"; PlayersTabButton.TextColor3 = Color3.fromRGB(200, 200, 200); PlayersTabButton.TextSize = 16; PlayersTabButton.Parent = TabContainer

    -- Content Frames for Tabs
    local ContentContainer = Instance.new("Frame"); ContentContainer.Name = "ContentContainer"; ContentContainer.Size = UDim2.new(1, 0, 1, -60); ContentContainer.Position = UDim2.new(0, 0, 0, 60); ContentContainer.BackgroundTransparency = 1; ContentContainer.Parent = ControlPanelFrame
    
    -- Controls Content
    local ControlsContentFrame = Instance.new("Frame"); ControlsContentFrame.Name = "ControlsContent"; ControlsContentFrame.Size = UDim2.new(1, 0, 1, 0); ControlsContentFrame.BackgroundTransparency = 1; ControlsContentFrame.Parent = ContentContainer; ControlsContentFrame.Visible = true
    local CoordinateLabel = Instance.new("TextLabel"); CoordinateLabel.Parent = ControlsContentFrame; CoordinateLabel.Name = "CoordinateLabel"; CoordinateLabel.Size = UDim2.new(1, -20, 0, 30); CoordinateLabel.Position = UDim2.new(0, 10, 0, 0); CoordinateLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 65); CoordinateLabel.Font = Enum.Font.SourceSansBold; CoordinateLabel.Text = "X: 0.0, Y: 0.0, Z: 0.0"; CoordinateLabel.TextColor3 = Color3.fromRGB(200, 200, 200); CoordinateLabel.TextSize = 16
    local UICorner_CoordLabel = Instance.new("UICorner", CoordinateLabel); UICorner_CoordLabel.CornerRadius = UDim.new(0, 6)
    local InputBox = Instance.new("TextBox"); InputBox.Parent = ControlsContentFrame; InputBox.Name = "InputBox"; InputBox.Size = UDim2.new(1, -70, 0, 30); InputBox.Position = UDim2.new(0, 10, 0, 40); InputBox.BackgroundColor3 = Color3.fromRGB(50, 50, 65); InputBox.Font = Enum.Font.SourceSans; InputBox.Text = "X, Y, Z"; InputBox.TextColor3 = Color3.fromRGB(200, 200, 200); InputBox.TextSize = 16; InputBox.ClearTextOnFocus = true
    local UICorner_InputBox = Instance.new("UICorner", InputBox); UICorner_InputBox.CornerRadius = UDim.new(0, 6)
    local GoButton = Instance.new("TextButton"); GoButton.Parent = ControlsContentFrame; GoButton.Name = "GoButton"; GoButton.Size = UDim2.new(0, 50, 0, 30); GoButton.Position = UDim2.new(1, -60, 0, 40); GoButton.BackgroundColor3 = Color3.fromRGB(0, 150, 200); GoButton.Font = Enum.Font.SourceSansBold; GoButton.Text = "Go"; GoButton.TextColor3 = Color3.fromRGB(255, 255, 255); GoButton.TextSize = 16
    local UICorner_GoBtn = Instance.new("UICorner", GoButton); UICorner_GoBtn.CornerRadius = UDim.new(0, 6)
    local FarmOreButton = Instance.new("TextButton"); FarmOreButton.Parent = ControlsContentFrame; FarmOreButton.Name = "FarmOreButton"; FarmOreButton.Size = UDim2.new(1, -20, 0, 30); FarmOreButton.Position = UDim2.new(0, 10, 0, 80); FarmOreButton.BackgroundColor3 = Color3.fromRGB(200, 40, 40); FarmOreButton.Font = Enum.Font.SourceSansBold; FarmOreButton.Text = "Farm Ore (Z)"; FarmOreButton.TextColor3 = Color3.fromRGB(255, 255, 255); FarmOreButton.TextSize = 16
    local UICorner_FarmOreBtn = Instance.new("UICorner", FarmOreButton); UICorner_FarmOreBtn.CornerRadius = UDim.new(0, 6)
    local BuyFoodButton = Instance.new("TextButton"); BuyFoodButton.Name = "BuyFoodButton"; BuyFoodButton.Size = UDim2.new(1, -20, 0, 30); BuyFoodButton.Position = UDim2.new(0, 10, 0, 120); BuyFoodButton.BackgroundColor3 = Color3.fromRGB(255, 180, 0); BuyFoodButton.Font = Enum.Font.SourceSansBold; BuyFoodButton.Text = "Buy Food (H)"; BuyFoodButton.TextColor3 = Color3.fromRGB(255, 255, 255); BuyFoodButton.TextSize = 16; BuyFoodButton.Parent = ControlsContentFrame
    local UICorner_BuyFoodBtn = Instance.new("UICorner", BuyFoodButton); UICorner_BuyFoodBtn.CornerRadius = UDim.new(0, 6)
    local MoveToSellButton = Instance.new("TextButton"); MoveToSellButton.Name = "MoveToSellButton"; MoveToSellButton.Size = UDim2.new(1, -20, 0, 30); MoveToSellButton.Position = UDim2.new(0, 10, 0, 160); MoveToSellButton.BackgroundColor3 = Color3.fromRGB(150, 50, 200); MoveToSellButton.Font = Enum.Font.SourceSansBold; MoveToSellButton.Text = "Sell Point (G)"; MoveToSellButton.TextColor3 = Color3.fromRGB(255, 255, 255); MoveToSellButton.TextSize = 16; MoveToSellButton.Parent = ControlsContentFrame
    local UICorner_MoveSellBtn = Instance.new("UICorner", MoveToSellButton); UICorner_MoveSellBtn.CornerRadius = UDim.new(0, 6)
    local SellLoopButton = Instance.new("TextButton"); SellLoopButton.Name = "SellLoopButton"; SellLoopButton.Size = UDim2.new(1, -20, 0, 30); SellLoopButton.Position = UDim2.new(0, 10, 0, 200); SellLoopButton.BackgroundColor3 = Color3.fromRGB(200, 100, 0); SellLoopButton.Font = Enum.Font.SourceSansBold; SellLoopButton.Text = "Loop Sell (V)"; SellLoopButton.TextColor3 = Color3.fromRGB(255, 255, 255); SellLoopButton.TextSize = 16; SellLoopButton.Parent = ControlsContentFrame
    local UICorner_SellLoopBtn = Instance.new("UICorner", SellLoopButton); UICorner_SellLoopBtn.CornerRadius = UDim.new(0, 6)

    -- [NEW] Blue Label Button
    local BlueLabelButton = Instance.new("TextButton"); BlueLabelButton.Name = "BlueLabelButton"; BlueLabelButton.Size = UDim2.new(1, -20, 0, 30); BlueLabelButton.Position = UDim2.new(0, 10, 0, 240); BlueLabelButton.BackgroundColor3 = Color3.fromRGB(20, 120, 220); BlueLabelButton.Font = Enum.Font.SourceSansBold; BlueLabelButton.Text = "Blue Label (B)"; BlueLabelButton.TextColor3 = Color3.fromRGB(255, 255, 255); BlueLabelButton.TextSize = 16; BlueLabelButton.Parent = ControlsContentFrame
    local UICorner_BlueLabelBtn = Instance.new("UICorner", BlueLabelButton); UICorner_BlueLabelBtn.CornerRadius = UDim.new(0, 6)

    -- [[[[[ NEW ]]]]]
    -- [NEW] Black Market (ตลาดมืด) Button
    local BlackMarketButton = Instance.new("TextButton"); BlackMarketButton.Name = "BlackMarketButton"; BlackMarketButton.Size = UDim2.new(1, -20, 0, 30); BlackMarketButton.Position = UDim2.new(0, 10, 0, 280); BlackMarketButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80); BlackMarketButton.Font = Enum.Font.SourceSansBold; BlackMarketButton.Text = "ตลาดมืด (N)"; BlackMarketButton.TextColor3 = Color3.fromRGB(255, 255, 255); BlackMarketButton.TextSize = 16; BlackMarketButton.Parent = ControlsContentFrame
    local UICorner_BlackMarketBtn = Instance.new("UICorner", BlackMarketButton); UICorner_BlackMarketBtn.CornerRadius = UDim.new(0, 6)
    -- [[[[[ END NEW ]]]]]

    -- Players Content
    local PlayersContentFrame = Instance.new("Frame"); PlayersContentFrame.Name = "PlayersContent"; PlayersContentFrame.Size = UDim2.new(1, 0, 1, 0); PlayersContentFrame.BackgroundTransparency = 1; PlayersContentFrame.Parent = ContentContainer; PlayersContentFrame.Visible = false
    local WalkToKealohaButton = Instance.new("TextButton"); WalkToKealohaButton.Name = "WalkToKealohaButton"; WalkToKealohaButton.Size = UDim2.new(1, -20, 0, 30); WalkToKealohaButton.Position = UDim2.new(0, 10, 0, 5); WalkToKealohaButton.BackgroundColor3 = Color3.fromRGB(220, 120, 0); WalkToKealohaButton.Font = Enum.Font.SourceSansBold; WalkToKealohaButton.Text = "Find KealohaWeaver5712"; WalkToKealohaButton.TextColor3 = Color3.fromRGB(255, 255, 255); WalkToKealohaButton.TextSize = 16; WalkToKealohaButton.Parent = PlayersContentFrame
    local UICorner_WarpKealohaBtn = Instance.new("UICorner", WalkToKealohaButton); UICorner_WarpKealohaBtn.CornerRadius = UDim.new(0, 6)
    playerListFrame = Instance.new("ScrollingFrame"); playerListFrame.Name = "PlayerListFrame"; playerListFrame.Parent = PlayersContentFrame; playerListFrame.Size = UDim2.new(1, -20, 1, -45); playerListFrame.Position = UDim2.new(0, 10, 0, 40); playerListFrame.BackgroundTransparency = 1; playerListFrame.BorderSizePixel = 0; playerListFrame.CanvasSize = UDim2.new(0, 0, 0, 0); playerListFrame.ScrollBarImageColor3 = Color3.fromRGB(180, 180, 180); playerListFrame.ScrollBarThickness = 8
    local listLayout = Instance.new("UIListLayout"); listLayout.Parent = playerListFrame; listLayout.SortOrder = Enum.SortOrder.Name; listLayout.Padding = UDim.new(0, 5); listLayout.FillDirection = Enum.FillDirection.Vertical; listLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center

    -- [ปรับปรุง] อัปเดตข้อความบนปุ่มเพื่อแสดงคีย์ลัด
    FarmOreButton.Text = "Farm Ore (Z)"
    BuyFoodButton.Text = "Buy Food (H)"
    MoveToSellButton.Text = "Sell Point (G)"
    SellLoopButton.Text = "Loop Sell (V)"
    BlueLabelButton.Text = "ATM (B)" -- [ CHANGED ]
    BlackMarketButton.Text = "ตลาดมืด (N)" -- [NEW]

    return {
        ScreenGui = ScreenGui,
        CollapseButton = CollapseButton,
        CoordinateLabel = CoordinateLabel,
        InputBox = InputBox,
        GoButton = GoButton,
        FarmOreButton = FarmOreButton,
        BuyFoodButton = BuyFoodButton,
        MoveToSellButton = MoveToSellButton,
        SellLoopButton = SellLoopButton,
        BlueLabelButton = BlueLabelButton,
        BlackMarketButton = BlackMarketButton, -- [NEW]
        WalkToKealohaButton = WalkToKealohaButton, -- [FIXED TYPO]
        ControlsTabButton = ControlsTabButton,
        PlayersTabButton = PlayersTabButton,
        ControlsContentFrame = ControlsContentFrame,
        PlayersContentFrame = PlayersContentFrame,
        ControlPanelFrame = ControlPanelFrame -- Return the main frame for resizing
    }
end

-- =============================================
-- Logic & Functions (Merged & Stabilized)
-- =============================================
-- State Variables
local isCollapsed = false
local originalSize = UDim2.new(0, 250, 0, 440) -- Updated size
local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
local isOreFarmLoopActive = false
local inventoryConnection = nil
local isWaitingForRockToClear = false
local lastPosition = Vector3.new()
local timeStationary = 0
local antiStuckThreshold = 5
local currentTargetOre = nil
local timeAtOreStationary = 0
local antiStuckAtOreThreshold = 10 
local distanceToOreThreshold = 3
local isSellLoopActive = false -- State for the new sell loop
local pickaxeCheckTimer = 0 -- [NEW] Timer for pickaxe check
-- [NEW] นำตัวแปร Stamina กลับมา
local lastStaminaValue = -1 
local staminaCheckTimer = 0 
local isLowHealthTeleporting = false -- [NEW] Cooldown for low health teleport

-- [MODIFIED] Logic for Diamond, Bank ContentText, and Cash Attribute Counters
local function setupCounters(counterLabels)
    
    local diamondLabel = counterLabels.diamond
    local bankDisplayLabel = counterLabels.bank -- This is OUR UI label
    local cashDisplayLabel = counterLabels.cash   -- This is OUR UI label

    -- Part 1: Diamond and Cash Attribute Counters (from inventoryFolder)
    if not inventoryFolder then 
        warn("Counters UI: Inventory folder not found for Diamond/Cash counters!")
        diamondLabel.Text = "ERR"
        cashDisplayLabel.Text = "ERR"
    else
        -- Diamond
        local function updateDiamondCount()
            local amount = inventoryFolder:GetAttribute(DIAMOND_ATTRIBUTE_NAME) or 0
            diamondLabel.Text = tostring(amount)
        end
        updateDiamondCount() -- Initial update

        -- Cash
        local function updateCashCount()
            local amount = inventoryFolder:GetAttribute(REAL_CASH_ATTRIBUTE_NAME) or 0
            cashDisplayLabel.Text = tostring(amount)
        end
        updateCashCount() -- Initial update

        -- Combined Attribute Listener
        inventoryFolder.AttributeChanged:Connect(function(attributeName)
            if attributeName == DIAMOND_ATTRIBUTE_NAME then
                updateDiamondCount()
            elseif attributeName == REAL_CASH_ATTRIBUTE_NAME then
                updateCashCount()
            end
        end)
        print("Diamond and Cash Attribute Counter UI logic initialized.")
    end

    -- Part 2: Bank ContentText Counter (from game's UI)
    local gameBankLabel = nil -- This is the GAME'S label
    
    pcall(function()
        gameBankLabel = PlayerGui:WaitForChild("Bank", 10)
            :WaitForChild("CanvasGroup", 10)
            :WaitForChild("Frame", 10)
            :WaitForChild("Bank", 10)
    end)

    if not gameBankLabel then
        warn("Bank TextLabel not found at: PlayerGui.Bank.CanvasGroup.Frame.Bank. 'Bank' counter will not work.")
        bankDisplayLabel.Text = "ERR"
        return
    end
    
    print("Bank TextLabel found. Initializing ContentText listener.")
    
    -- Function to update our UI from the bank's UI
    local function updateBankTextCounter()
        bankDisplayLabel.Text = gameBankLabel.ContentText
    end
    
    -- Initial update
    updateBankTextCounter()
    
    -- Listen for changes on the Bank TextLabel
    gameBankLabel.Changed:Connect(function(property)
        if property == "ContentText" then
            updateBankTextCounter()
        end
    end)
    
    print("Counters UI logic initialized (Diamond, Bank ContentText, Cash Attribute).")
end


-- New function to safely create the list of objects to track
local function getObjectsToTrack()
    local trackList = {}
    local farm = Workspace:FindFirstChild("Farm")
    if not farm then
        warn("'Farm' folder not found in Workspace.")
        return trackList
    end

    local rockFolder = farm:FindFirstChild("Rock")
    if not rockFolder then
        warn("'Rock' folder not found in Workspace.Farm.")
        return trackList
    end

    for _, child in ipairs(rockFolder:GetChildren()) do
        if child:IsA("PVInstance") then
            table.insert(trackList, child)
        end
    end
    
    return trackList
end

-- ===================================================================
-- [NEW] Pathfinding function to walk to a specific coordinate
-- This function calculates a path and moves the character along it.
-- ===================================================================
local function walkToPosition(destinationPosition)
    local character = LocalPlayer.Character
    if not character then return end
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    local rootPart = character:FindFirstChild("HumanoidRootPart")

    if not (humanoid and rootPart and humanoid.Health > 0) then return end

    print("Walking to position:", destinationPosition, ". Calculating path...")

    local agentParameters = { AgentRadius = 3, AgentHeight = 6, AgentCanJump = true }
    local path = PathfindingService:CreatePath(agentParameters)

    local success, errorMessage = pcall(function()
        path:ComputeAsync(rootPart.Position, destinationPosition)
    end)

    if success and path.Status == Enum.PathStatus.Success then
        print("Path calculated. Following waypoints...")
        local waypoints = path:GetWaypoints()

        local pathBlockedConnection
        local function onPathBlocked(blockedWaypointIndex)
             if blockedWaypointIndex < #waypoints and isWaitingForRockToClear then
                 print("Path blocked at waypoint " .. blockedWaypointIndex .. ". Recalculating...")
                 if pathBlockedConnection then pathBlockedConnection:Disconnect() end
                 walkToPosition(destinationPosition) -- Recalculate and retry
             end
        end
        pathBlockedConnection = path.Blocked:Connect(onPathBlocked)

        for _, waypoint in ipairs(waypoints) do
            -- Check if the process was cancelled (e.g., player manually stopped farming)
            if not isWaitingForRockToClear and not isOreFarmLoopActive then
                print("Process was cancelled mid-path. Aborting walk.")
                break
            end
            humanoid:MoveTo(waypoint.Position)

            if waypoint.Action == Enum.PathWaypointAction.Jump then
                humanoid.Jump = true
            end

            -- [REMOVED] ลบการกด Shift ที่ทำให้เกิดปัญหา
            -- pcall(function()
            --     local VirtualInputManager = game:GetService("VirtualInputManager")
            --     VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.LeftShift, false, game)
            --     task.wait(0.05) -- Very short press for a toggle
            --     VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.LeftShift, false, game)
            -- end)

            humanoid.MoveToFinished:Wait()
        end

        if pathBlockedConnection then pathBlockedConnection:Disconnect() end
        print("Reached destination or path ended.")
    else
        warn("Pathfinding to position failed: ", errorMessage or "No viable path.", "Using direct walk instead.")
        humanoid:MoveTo(destinationPosition)
        humanoid.MoveToFinished:Wait() -- Also wait for direct move
    end
end


-- Pathfinding walk function to ore
local function findAndWalkToClosestOre(oreToExclude)
    local character = LocalPlayer.Character
    if not character then return end
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    
    if not (humanoid and rootPart and humanoid.Health > 0 and isOreFarmLoopActive) then return end

    task.wait(0.5)

    local objectsToTrack = getObjectsToTrack()
    if #objectsToTrack == 0 then
        warn("No objects to track were found. Aborting walk.")
        currentTargetOre = nil
        return
    end

    local closestObject, minDistance = nil, math.huge
    for _, obj in ipairs(objectsToTrack) do
        if obj and obj.Parent and obj ~= oreToExclude then
            local dist = (rootPart.Position - obj.WorldPivot.Position).Magnitude
            if dist < minDistance then
                minDistance, closestObject = dist, obj
            end
        end
    end

    if closestObject then
        currentTargetOre = closestObject
        print("Walking to closest object:", closestObject:GetFullName(), ". Calculating path...")
        
        local agentParameters = { AgentRadius = 3, AgentHeight = 6, AgentCanJump = true }
        local path = PathfindingService:CreatePath(agentParameters)
        
        local success, errorMessage = pcall(function()
            path:ComputeAsync(rootPart.Position, closestObject.WorldPivot.Position)
        end)

        if success and path.Status == Enum.PathStatus.Success then
            print("Path calculated. Following waypoints...")
            local waypoints = path:GetWaypoints()
            
            local pathBlockedConnection
            local function onPathBlocked(blockedWaypointIndex)
                if blockedWaypointIndex < #waypoints then
                    print("Path blocked at waypoint " .. blockedWaypointIndex .. ". Recalculcating...") -- [FIXED]
                    if pathBlockedConnection then pathBlockedConnection:Disconnect() end
                    findAndWalkToClosestOre(nil)
                end
            end
            pathBlockedConnection = path.Blocked:Connect(onPathBlocked)

            for i, waypoint in ipairs(waypoints) do
                if not isOreFarmLoopActive then
                    print("Farming stopped mid-path. Aborting walk.")
                    break
                end
                humanoid:MoveTo(waypoint.Position)

                -- [REMOVED] ลบการกด Shift ที่ทำให้เกิดปัญหา
                -- pcall(function()
                --     local VirtualInputManager = game:GetService("VirtualInputManager")
                --     VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.LeftShift, false, game)
                --     task.wait(0.05) -- Very short press for a toggle
                --     VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.LeftShift, false, game)
                -- end)

                humanoid.MoveToFinished:Wait()
            end
            
            if pathBlockedConnection then pathBlockedConnection:Disconnect() end
            print("Reached destination or path ended.")
        else
            warn("Pathfinding to ore failed: ", errorMessage or "No viable path.", "Using direct walk instead.")
            humanoid:MoveTo(closestObject.WorldPivot.Position)
        end
    else
        currentTargetOre = nil
        warn("Could not find any valid objects to walk to (excluding current target).")
    end
end

-- [MODIFIED] Move to Coords using teleport movement
local function moveToCoords(inputBox)
    local parts = inputBox.Text:split(",")
    if #parts == 3 then
        local x, y, z = tonumber(parts[1]), tonumber(parts[2]), tonumber(parts[3])
        if x and y and z then
            teleportTo(Vector3.new(x, y, z))
            inputBox.Text = ""
        else
            inputBox.Text = "Error: Invalid Format"
        end
    else
        inputBox.Text = "Error: Use X,Y,Z"
    end
end

-- Farming coordinates
local initialFarmPosition = Vector3.new(-296, 12, -2489)
local postProcessFarmPosition = Vector3.new(-296, 12, -2489)

-- Farm Step for auto-resume
local function executeResumeFarmStep()
    if not isOreFarmLoopActive then return end
    teleportTo(postProcessFarmPosition) -- Use teleport to get back to the general area
    task.wait(1) -- Wait for teleport to settle
    findAndWalkToClosestOre(nil) -- Then start walking to the nearest ore
end

-- Inventory change handler for farming
local function onInventoryChanged(attributeName, farmButton)
    if not inventoryFolder then return end
    
    local rockCount = inventoryFolder:GetAttribute("Rock") or 0

    if isOreFarmLoopActive and not isWaitingForRockToClear and rockCount >= 100 then
        isWaitingForRockToClear = true
        isOreFarmLoopActive = false -- Pause farming

        farmButton.Text = "Walking to Process..."
        farmButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)

        print("Rock count reached 100. Walking to process point with a 10-second timeout.")
        task.wait(1)

        -- [[[[[ ใหม่: ตรรกะการจับเวลาสำหรับการเดินไปแปรรูป ]]]]]
        local walkCompleted = false
        local walkCancelled = false

        -- Coroutine สำหรับการเดิน เพื่อไม่ให้เทรดหลักค้าง
        task.spawn(function()
            -- สิ่งนี้จะทำงานอยู่เบื้องหลัง
            walkToPosition(postProcessFarmPosition) 
            -- ตรวจสอบว่าไม่ได้ถูกยกเลิกในระหว่างการเดิน
            if isWaitingForRockToClear then 
                walkCompleted = true
            else
                walkCancelled = true
            end
        end)

        -- ลูปสำหรับจับเวลาและตรวจสอบสถานะ
        local timeWaited = 0
        while not walkCompleted and timeWaited < 10 do
            -- ตรวจสอบการยกเลิกด้วยตนเองจาก UI
            if not isWaitingForRockToClear then 
                walkCancelled = true
                break
            end
            task.wait(0.1)
            timeWaited = timeWaited + 0.1
        end
        -- [[[[[ จบ: ตรรกะการจับเวลา ]]]]]
        
        -- ถ้าถูกยกเลิกโดยผู้ใช้
        if walkCancelled then
            print("Walk to process was cancelled by the user.")
            return -- ออกจากฟังก์ชัน สถานะ UI จะถูกจัดการที่อื่น
        end

        -- ถ้าลูปจบลงเพราะหมดเวลา ให้เทเลพอร์ต
        if not walkCompleted then
            print("Walk to process point timed out (>10s). Teleporting to destination...")
            teleportTo(postProcessFarmPosition)
            task.wait(1) -- รอสักครู่เพื่อให้การเทเลพอร์ตเสร็จสิ้น
        else
            print("Walk to process point completed successfully within the time limit.")
        end

        -- ตอนนี้ ไม่ว่าจะมาถึงด้วยวิธีใด (เดิน, หมดเวลา+เทเลพอร์ต) เราจะทำการแปรรูปแร่
        if isWaitingForRockToClear then
            print("Character is at the processing point. Sending 'Process' command to server...")
            NetworkEvent:FireServer("fire", nil, "Process", "Rock")
        else
            -- กรณีนี้ควรถูกดักจับโดย walkCancelled แต่นี่เป็นการป้องกันไว้ก่อน
            print("Walk was cancelled just before processing. Not sending 'Process' command.")
        end

    elseif isWaitingForRockToClear and rockCount == 0 then
        print("Rock inventory cleared. Waiting 5 seconds before resuming farming...")
        task.wait(5)

        if not isWaitingForRockToClear then
            print("Farming was cancelled during the wait. Aborting resume.")
            return
        end
        
        print("Resuming farming...")
        isWaitingForRockToClear = false
        isOreFarmLoopActive = true -- Resume farming

        farmButton.Text = "Stop Farming"
        farmButton.BackgroundColor3 = Color3.fromRGB(200, 40, 40)
        
        executeResumeFarmStep()
    end
end


-- Toggle Farm Loop
local function toggleOreFarmLoop(farmButton)
    isOreFarmLoopActive = not isOreFarmLoopActive
    
    if isOreFarmLoopActive then
        isWaitingForRockToClear = false
        farmButton.Text = "Stop Farming"
        farmButton.BackgroundColor3 = Color3.fromRGB(200, 40, 40)
        
        local currentRootPart = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if currentRootPart then
            lastPosition = currentRootPart.Position
            print("Starting farm manually. Teleporting to initial position...")
            teleportTo(initialFarmPosition) -- [MODIFIED]
            task.wait(1) -- Wait for teleport to settle
            findAndWalkToClosestOre(nil)
        end
        timeStationary = 0
        
        if not inventoryConnection then
            -- [MODIFIED] Check for Rock attribute only for farming logic
            inventoryConnection = inventoryFolder.AttributeChanged:Connect(function(attributeName)
                if attributeName == "Rock" then
                    onInventoryChanged(attributeName, farmButton)
                end
            end)
        end
        
        task.spawn(function()
            task.wait(0.5)
            onInventoryChanged("Rock", farmButton)
        end)
        
    else
        isWaitingForRockToClear = false
        farmButton.Text = "Farm Ore (Z)"
        farmButton.BackgroundColor3 = Color3.fromRGB(0, 170, 80)
        
        if inventoryConnection then
            inventoryConnection:Disconnect()
            inventoryConnection = nil
        end
    end
end

-- ===================================================================
-- [[[[[ บล็อคที่แก้ไข ]]]]]
-- [MODIFIED] Toggle Sell Loop (ตรวจสอบ Attributes ในกระเป๋า)
-- ===================================================================
local function toggleSellLoop(button)
    isSellLoopActive = not isSellLoopActive

    if isSellLoopActive then
        button.Text = "Stop Selling"
        button.BackgroundColor3 = Color3.fromRGB(200, 40, 40) -- Red color for "Stop"

        task.spawn(function()
            print("Sell loop started.")
            
            -- [NEW] รายการไอเท็มที่จะขายจาก inventory attributes
            local itemsToSell = {"Rockfragments", "Soil", "Iron", "Copper", "Gold"}

            while isSellLoopActive do
                if not NetworkEvent then
                    warn("Sell Loop: NetworkEvent is not available.")
                    isSellLoopActive = false -- Stop the loop
                    break
                end
                
                if not inventoryFolder then
                    warn("Sell Loop: inventoryFolder is not found.")
                    isSellLoopActive = false -- Stop the loop
                    break
                end

                -- [NEW] วนลูปแต่ละไอเท็มและขายทั้งหมด
                for _, itemName in ipairs(itemsToSell) do
                    if not isSellLoopActive then break end -- ตรวจสอบอีกครั้ง เผื่อถูกสั่งหยุดกลางคัน
                    
                    local quantity = inventoryFolder:GetAttribute(itemName)
                    
                    -- ตรวจสอบว่ามีไอเท็มอยู่จริง (เป็นตัวเลข และมากกว่า 0)
                    if quantity and type(quantity) == "number" and quantity > 0 then
                        pcall(function()
                            print("Selling " .. tostring(quantity) .. " of " .. itemName)
                            NetworkEvent:FireServer("fire", nil, "Economy", itemName, quantity)
                        end)
                        task.wait(0.1) -- หน่วงเวลาเล็กน้อยระหว่างการขายแต่ละรายการ
                    end
                end
                
                task.wait(0.5) -- รอ 0.5 วินาที ก่อนที่จะเริ่มวนลูปขายใหม่ทั้งหมด
            end
            
            -- This part runs after the loop ends
            if button and button.Parent then
                button.Text = "Loop Sell (V)"
                button.BackgroundColor3 = Color3.fromRGB(200, 100, 0) -- Original color
            end
            print("Sell loop stopped.")
        end)
    else
        -- The loop will stop on its own when isSellLoopActive becomes false
    end
end
-- ===================================================================
-- [[[[[ จบ บล็อคที่แก้ไข ]]]]]
-- ===================================================================


-- Buy/Sell/Walk Functions
local function buyFood()
    if not NetworkEvent then warn("NetworkEvent not available for buyFood") return end
    teleportTo(Vector3.new(3000, 16, 2280)) -- [MODIFIED]
    task.wait(1)
    NetworkEvent:FireServer("fire", nil, "Supermarket", "Water", 15)
    task.wait(0.2)
    NetworkEvent:FireServer("fire", nil, "Supermarket", "Bread", 15)
end

local function moveToSellPoint()
    local destination = Vector3.new(2853.1, 14.5, 2108.9)
    print("Moving to sell point...")
    -- [REMOVED] ลบ offset เดิม (Vector3.new(0, 3, 0)) ออก เพราะ `teleportTo` จะเพิ่มให้เอง
    teleportTo(destination)
end

local function walkToKealoha()
    local targetPlayerName = "KealohaWeaver5712"
    local targetPlayer = Players:FindFirstChild(targetPlayerName)
    
    if not targetPlayer then
        warn("Player " .. targetPlayerName .. " not found in the game.")
        return
    end

    local characterFolder = Workspace:FindFirstChild("Character")
    local targetObject = characterFolder and characterFolder:FindFirstChild(targetPlayer.Name)

    if targetObject then
        local targetPosition
        if targetObject:IsA("Model") and targetObject.PrimaryPart then
            targetPosition = targetObject.PrimaryPart.Position
        elseif targetObject:IsA("BasePart") then
            targetPosition = targetObject.Position
        else
            warn("Could not determine position for target object: '" .. targetObject.Name .. "'")
            return
        end
        
        print("Walking to player: " .. targetPlayer.Name)
        walkToPosition(targetPosition)
    else
        warn("Could not find character object for player: " .. targetPlayer.Name)
    end
end

-- ===================================================================
-- [[[[[ บล็อคที่แก้ไข ]]]]]
-- [NEW] Death Recovery Function (แก้ไขตามคำขอ)
-- ฟังก์ชันนี้จะทำงานเมื่อตัวละครตาย
-- ===================================================================
local function handleDeathAndRecover()
    task.spawn(function()
        print("DEATH DETECTED! Starting new death sequence.")
        
        -- 1. วาปไปยังพิกัด 0, -200, 0
        print("Moving to death point (0, -200, 0)...")
        teleportTo(Vector3.new(0, -200, 0))

        -- 2. รอ 5 วินาที
        print("Waiting for 5 seconds...")
        task.wait(5)

        -- 3. ทำการออกจากเกม
        print("Exiting game.")
        pcall(function()
            -- LocalPlayer ถูกกำหนดไว้ที่ด้านบนของสคริปต์
            if LocalPlayer then
                LocalPlayer:Kick("คุณเสียชีวิต")
            else
                warn("Could not kick player: LocalPlayer not found.")
            end
        end)
    end)
end
-- ===================================================================
-- [[[[[ จบ บล็อคที่แก้ไข ]]]]]
-- ===================================================================

-- =============================================
-- Main Execution & Event Connections
-- =============================================
-- Create UIs
UIElements = createControlPanelUI()
local counterLabels = createCountersUI() -- [MODIFIED]

-- Setup Logic
setupCounters(counterLabels) -- [MODIFIED]
-- pcall(setupBankTextLabelUpdater) -- [REMOVED]
originalSize = UIElements.ControlPanelFrame.Size -- Update original size from created UI

-- Connect Death Handler
local humanoid = Character:WaitForChild("Humanoid")
humanoid.Died:Connect(handleDeathAndRecover)
print("Death recovery system connected for initial character.")

-- Update Loop
RunService.RenderStepped:Connect(function(deltaTime)
    if HumanoidRootPart and not isCollapsed then
        local pos = HumanoidRootPart.Position
        UIElements.CoordinateLabel.Text = string.format("X: %.1f, Y: %.1f, Z: %.1f", pos.X, pos.Y, pos.Z)
    end
    if not isOreFarmLoopActive or not (LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")) then return end
    
    local currentPos = LocalPlayer.Character.HumanoidRootPart.Position
    local isStationary = (currentPos - lastPosition).Magnitude < 0.5

    -- [NEW] Pickaxe Check Loop (every 1 second)
    pickaxeCheckTimer = pickaxeCheckTimer + deltaTime
    if pickaxeCheckTimer >= 1 then
        pickaxeCheckTimer = 0 -- Reset timer
        
        -- Find the player's model inside Workspace.Character, as implied by user and other parts of the script
        local characterFolder = Workspace:FindFirstChild("Character")
        local playerModel = characterFolder and characterFolder:FindFirstChild(LocalPlayer.Name)

        if playerModel then
            local pickaxe = playerModel:FindFirstChild("Pickaxe")
            if not pickaxe then
                print("Pickaxe not equipped. Pressing '1' to equip.")
                pcall(function()
                    local VirtualInputManager = game:GetService("VirtualInputManager")
                    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.One, false, game)
                    task.wait(0.1)
                    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.One, false, game)
                end)
            end
        else
            -- Fallback check using the standard Character property if not found in Workspace.Character
            local char = LocalPlayer.Character
            if char then
                 local pickaxe = char:FindFirstChild("Pickaxe")
                 if not pickaxe then
                     print("Pickaxe not equipped (fallback check). Pressing '1' to equip.")
                     pcall(function()
                         local VirtualInputManager = game:GetService("VirtualInputManager")
                         VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.One, false, game)
                         task.wait(0.1)
                         VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.One, false, game)
                     end)
                 end
            else
                warn("Pickaxe check: Could not find player model.")
            end
        end
    end

    -- General Anti-Stuck Logic
    if isStationary then
        timeStationary += deltaTime
    else
        timeStationary = 0
        lastPosition = currentPos
    end
    
    if timeStationary >= antiStuckThreshold then
        print("Anti-Stuck Triggered (General). Re-pathing...")
        findAndWalkToClosestOre(nil)
        timeStationary = 0
        timeAtOreStationary = 0
    end

    -- [NEW] นำระบบ Stamina Check กลับมาและแก้ไข
    staminaCheckTimer = staminaCheckTimer + deltaTime
    if staminaCheckTimer >= 2 then
        staminaCheckTimer = 0 -- Reset timer
        
        -- Only check if the character is supposed to be moving (not stationary)
        if not isStationary and statusFolder then
            local currentStamina = statusFolder:GetAttribute("Stamina")
            if currentStamina then
                
                -- [FIXED] แก้ไขตรรกะ:
                -- 1. ตรวจสอบว่า lastStaminaValue ไม่ใช่ -1 (ไม่ใช่การรันครั้งแรก)
                if lastStaminaValue ~= -1 then
                    -- 2. ถ้าค่า Stamina "ไม่ลดลง" (แสดงว่ากำลังเดิน) ให้กด Shift 1 ครั้ง
                    if currentStamina >= lastStaminaValue and currentStamina > 10 then 
                        print("Stamina not decreasing while moving. Simulating Shift toggle.")
                        pcall(function()
                            local VirtualInputManager = game:GetService("VirtualInputManager")
                            -- [FIXED] Just toggle (press/release), don't hold
                            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.LeftShift, false, game)
                            task.wait(0.05) 
                            VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.LeftShift, false, game)
                        end)
                    end
                end
                
                -- 3. อัปเดตค่า lastStaminaValue "ทุกครั้ง" หลังการตรวจสอบ
                lastStaminaValue = currentStamina
            else
                -- Reset if stamina attribute is lost
                lastStaminaValue = -1
            end
        else
            -- Reset if stationary or no status folder
            lastStaminaValue = -1
        end
    end

    -- Ore-specific Anti-Stuck Logic
    if currentTargetOre and currentTargetOre.Parent then
        local distToTarget = (currentPos - currentTargetOre.WorldPivot.Position).Magnitude

        if isStationary and distToTarget <= distanceToOreThreshold then
            timeAtOreStationary += deltaTime
            
            if timeAtOreStationary >= antiStuckAtOreThreshold then
                print("Anti-Stuck Triggered (at Ore). Finding next closest ore...")
                findAndWalkToClosestOre(currentTargetOre)
                timeStationary = 0
                timeAtOreStationary = 0
            end
        else
            timeAtOreStationary = 0
        end
    else
        timeAtOreStationary = 0
    end
end)

-- UI Interactions
local function toggleCollapse()
    isCollapsed = not isCollapsed
    local targetSize = isCollapsed and UDim2.new(originalSize.X.Scale, originalSize.X.Offset, 0, 30) or originalSize

    local contentContainer = ControlPanelFrame:FindFirstChild("ContentContainer")
    local tabContainer = ControlPanelFrame:FindFirstChild("TabContainer")

    if contentContainer then contentContainer.Visible = not isCollapsed end
    if tabContainer then tabContainer.Visible = not isCollapsed end

    UIElements.CollapseButton.Text = isCollapsed and "+" or "-"
    TweenService:Create(ControlPanelFrame, tweenInfo, {Size = targetSize}):Play()
end

local function switchTab(tabName)
    local isControls = (tabName == "Controls")
    UIElements.ControlsContentFrame.Visible = isControls
    UIElements.PlayersContentFrame.Visible = not isControls
    UIElements.ControlsTabButton.BackgroundColor3 = isControls and Color3.fromRGB(60, 60, 80) or Color3.fromRGB(40, 40, 50)
    UIElements.ControlsTabButton.TextColor3 = isControls and Color3.fromRGB(255, 255, 255) or Color3.fromRGB(200, 200, 200)
    UIElements.PlayersTabButton.BackgroundColor3 = not isControls and Color3.fromRGB(60, 60, 80) or Color3.fromRGB(40, 40, 50)
    UIElements.PlayersTabButton.TextColor3 = not isControls and Color3.fromRGB(255, 255, 255) or Color3.fromRGB(200, 200, 200)
end

UIElements.CollapseButton.MouseButton1Click:Connect(toggleCollapse)
UIElements.ControlsTabButton.MouseButton1Click:Connect(function() switchTab("Controls") end)
UIElements.PlayersTabButton.MouseButton1Click:Connect(function() 
    switchTab("Players")
    updatePlayerList() -- Update player list when tab is clicked
end)
UIElements.GoButton.MouseButton1Click:Connect(function() moveToCoords(UIElements.InputBox) end)
UIElements.FarmOreButton.MouseButton1Click:Connect(function() toggleOreFarmLoop(UIElements.FarmOreButton) end)
UIElements.BuyFoodButton.MouseButton1Click:Connect(buyFood)
UIElements.MoveToSellButton.MouseButton1Click:Connect(moveToSellPoint)
UIElements.WalkToKealohaButton.MouseButton1Click:Connect(walkToKealoha)
UIElements.SellLoopButton.MouseButton1Click:Connect(function() toggleSellLoop(UIElements.SellLoopButton) end)
-- [NEW] Connect the blue label button
UIElements.BlueLabelButton.MouseButton1Click:Connect(function() 
    print("Moving to ATM location...")
    teleportTo(Vector3.new(2922, 23, 2757)) -- [ CHANGED ]
end)

-- [[[[[ NEW ]]]]]
-- [NEW] Connect the black market button
UIElements.BlackMarketButton.MouseButton1Click:Connect(function() 
    print("Moving to Black Market (ตลาดมืด)...")
    -- =================================================================
    -- หมายเหตุ: พิกัด "ตลาดมืด"
    -- =================================================================
    teleportTo(Vector3.new(3090, 22, 2614)) 
end)
-- [[[[[ END NEW ]]]]]

-- [[[[[ บล็อคใหม่ ]]]]]
-- พับ UI ตอนเริ่มต้นเกมตามที่ผู้ใช้ร้องขอ
print("Collapsing UI on start...")
toggleCollapse() 
-- [[[[[ จบ ]]]]]


-- =============================================
-- [[[[[ บล็อคที่แก้ไข ]]]]]
-- เพิ่มคีย์ลัดตามที่ผู้ใช้ร้องขอ
-- =============================================
UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if gameProcessedEvent then return end

    if input.KeyCode == Enum.KeyCode.T then
        UIElements.ScreenGui.Enabled = not UIElements.ScreenGui.Enabled
        
    -- [NEW] Hotkeys for buttons
    elseif input.KeyCode == Enum.KeyCode.Z then
        print("Key Z pressed: Toggling Farm Ore")
        toggleOreFarmLoop(UIElements.FarmOreButton)
        
    elseif input.KeyCode == Enum.KeyCode.H then
        print("Key H pressed: Buying Food")
        buyFood()
        
    elseif input.KeyCode == Enum.KeyCode.G then
        print("Key G pressed: Moving to Sell Point")
        moveToSellPoint()
        
    elseif input.KeyCode == Enum.KeyCode.V then
        print("Key V pressed: Toggling Sell Loop")
        toggleSellLoop(UIElements.SellLoopButton)
        
    elseif input.KeyCode == Enum.KeyCode.B then
        print("Key B pressed: Moving to ATM") -- [ CHANGED ]
        teleportTo(Vector3.new(2922, 23, 2757)) -- [ CHANGED ]
        
    -- [[[[[ NEW ]]]]]
    elseif input.KeyCode == Enum.KeyCode.N then
        print("Key N pressed: Moving to Black Market (ตลาดมืด)")
        -- =================================================================
        -- หมายเหตุ: พิกัด "ตลาดมืด"
        -- =================================================================
        teleportTo(Vector3.new(3090, 22, 2614)) 
    -- [[[[[ END NEW ]]]]]
        
    end
end)


--[[
    [อัปเดต] ระบบกินอาหาร/น้ำดื่มอัตโนมัติโดยใช้ Attributes
    ลูปนี้จะคอยตรวจสอบค่าสถานะ Attributes ของผู้เล่น และจะใช้ไอเทมก็ต่อเมื่อจำเป็นเท่านั้น
]]
task.spawn(function()
    if not NetworkEvent then
        warn("NetworkEvent not found for Smart Auto-Eat loop.")
        return
    end

    while task.wait(5) do -- ตรวจสอบทุกๆ 5 วินาที
        local statusFolder = LocalPlayer:FindFirstChild("Status")
        if statusFolder then
            -- ตรวจสอบค่าความหิว (Hunger) จาก Attribute
            local hungerValue = statusFolder:GetAttribute("Hunger")
            if hungerValue and hungerValue <= 70 then
                print("Hunger is low (" .. string.format("%.2f", hungerValue) .. "), eating bread.")
                NetworkEvent:FireServer("fire", nil, "Use Item", "Bread")
                task.wait(2) -- หน่วงเวลาเล็กน้อยหลังกิน
            end

            -- ตรวจสอบค่าความกระหาย (Thirsty) จาก Attribute
            local thirstyValue = statusFolder:GetAttribute("Thirsty")
            if thirstyValue and thirstyValue <= 70 then
                print("Thirsty is low (" .. string.format("%.2f", thirstyValue) .. "), drinking water.")
                NetworkEvent:FireServer("fire", nil, "Use Item", "Water")
                task.wait(2) -- หน่วงเวลาเล็กน้อยหลังดื่ม
            end
        end
    end
end)


-- Anti-AFK Loop to prevent being kicked for inactivity
task.spawn(function()
    task.wait(60)
    local VirtualInputManager = game:GetService("VirtualInputManager")
    while true do
        task.wait(240) -- Every 4 minutes
        pcall(function()
            -- Simulate pressing Spacebar
            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Space, false, game)
            task.wait(0.1)
            VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Space, false, game)
            
            print("Anti-AFK action performed (Spacebar) to prevent disconnection.")
        end)
    end
end)

-- ====================================================================================
-- [[[[[ บล็อคใหม่ ]]]]]
-- ลูปตรวจสอบตำแหน่งฟาร์ม
-- ลูปนี้จะตรวจสอบทุก 1 นาที ว่าผู้เล่นอยู่ไกลจากจุดฟาร์มเกินไปหรือไม่
-- ในขณะที่เปิดใช้งานการฟาร์มอยู่
-- ====================================================================================
task.spawn(function()
    while task.wait(60) do -- ทำงานทุก 1 นาที
        -- รันการตรวจสอบนี้เฉพาะเมื่อลูปฟาร์มทำงานอยู่ และไม่ได้อยู่ในกระบวนการแปรรูปแร่
        if isOreFarmLoopActive and not isWaitingForRockToClear then
            pcall(function()
                local char = LocalPlayer.Character
                local rootPart = char and char:FindFirstChild("HumanoidRootPart")
                
                if rootPart then
                    local currentPosition = rootPart.Position
                    -- ใช้ 'initialFarmPosition' เป็นจุดอ้างอิงของ "จุดฟาร์ม"
                    local farmPoint = initialFarmPosition 
                    
                    local distance = (currentPosition - farmPoint).Magnitude
                    
                    if distance > 1000 then
                        print("Player is " .. string.format("%.0f", distance) .. " studs away from the farm point. Teleporting back...")
                        teleportTo(farmPoint)
                    end
                end
            end)
        end
    end
end)


-- ====================================================================================
-- [[ MODIFIED ]] Health-Based Recovery Loop
-- This loop checks the player's current "Health" attribute.
-- If Health drops below 30, it stops farming and teleports to the food store.
-- It includes a cooldown to prevent spamming.
-- ====================================================================================
task.spawn(function()
    local statusFolder = LocalPlayer:WaitForChild("Status")
    if not statusFolder then
        warn("Health-based recovery: Status folder not found.")
        return
    end

    statusFolder.AttributeChanged:Connect(function(attributeName)
        -- We only care about the "Health" attribute changing
        if attributeName == "Health" then
            local healthValue = statusFolder:GetAttribute("Health")
            
            -- Check if health is low AND we are not already in the process of teleporting
            if healthValue and healthValue < 30 and not isLowHealthTeleporting then
                
                isLowHealthTeleporting = true -- Set the flag to true to start the cooldown
                
                -- Spawn a new coroutine to handle the teleport without blocking the event
                task.spawn(function()
                    print("Health is low (" .. tostring(healthValue) .. "). Initiating emergency teleport to 0, -200, 0.")

                    -- 1. Stop farming if it's active
                    if isOreFarmLoopActive then
                        print("Halting ore farming...")
                        toggleOreFarmLoop(UIElements.FarmOreButton)
                        task.wait(0.5) -- Small delay to ensure state change
                    end

                    -- 2. Call the buyFood function (which includes teleporting)
                    print("Teleporting to 0, -200, 0...")
                    teleportTo(Vector3.new(0, -200, 0))

                    -- 3. Wait for 60 seconds (cooldown) before allowing this to trigger again
                    print("Teleport complete. Starting 60 second recovery cooldown.")
                    task.wait(60)
                    
                    print("Recovery cooldown finished. Low health teleport is re-enabled.")
                    isLowHealthTeleporting = false -- Reset the flag
                end)
            end
        end
    end)
    print("Health-based recovery system (Health < 30) is active.")
end)

-- ====================================================================================
-- [[[[[ บล็อคใหม่: ตรวจสอบจำนวนผู้เล่นออนไลน์ ]]]]]
-- ตรวจสอบค่า TextLabel ที่ระบุ
-- ถ้าค่าเป็น 35 หรือมากกว่า ให้ทำการออกจากเกมทันที
-- ====================================================================================
task.spawn(function()
    local textLabelPath = "Scoreboard.CanvasGroup.Frame.Status.Online.TextLabel"
    print("Starting online player check loop for: " .. textLabelPath)

    while task.wait(1) do -- ตรวจสอบทุก 1 วินาที
        local playerGui = LocalPlayer:FindFirstChild("PlayerGui")
        if not playerGui then
            -- print("PlayerGui not found, waiting...")
            continue
        end

        -- ใช้ pcall เพื่อป้องกัน error หาก UI ยังไม่โหลด
        local success, textLabel = pcall(function()
            -- เราจะใช้ FindFirstChild แบบต่อกันไปเรื่อยๆ แทน WaitForChild เพื่อไม่ให้ลูปค้าง
            -- หาก UI หายไปชั่วขณะ
            return playerGui:FindFirstChild("Scoreboard")
                            :FindFirstChild("CanvasGroup")
                            :FindFirstChild("Frame")
                            :FindFirstChild("Status")
                            :FindFirstChild("Online")
                            :FindFirstChild("TextLabel")
        end)

        if success and textLabel then
            local textValue = textLabel.Text
            local onlineCount = tonumber(textValue)

            if onlineCount then
                -- print("Current online count: " .. onlineCount) -- for debugging
                if onlineCount >= 35 then
                    print("Online count is " .. onlineCount .. " (>= 35). Kicking player.")
                    LocalPlayer:Kick("Player count is " .. onlineCount .. ". Exiting.")
                    break -- หยุดลูปหลังจากสั่ง kick
                end
            else
                -- print("Could not convert text to number: '" .. textValue .. "'") -- for debugging
            end
        else
            -- print("TextLabel not found at path: " .. textLabelPath) -- for debugging
        end
    end
end)


-- Re-establish character parts on respawn and connect death handler
LocalPlayer.CharacterAdded:Connect(function(char)
    Character = char
    HumanoidRootPart = char:WaitForChild("HumanoidRootPart")
    local newHumanoid = char:WaitForChild("Humanoid")
    newHumanoid.Died:Connect(handleDeathAndRecover)
    print("Death recovery system connected for respawned character.")
end)

-- [NEW] Perform a one-time key press when the script starts
task.wait(5) -- Wait 5 seconds for the game to load before pressing keys
print("Performing one-time key press (1 + Shift)...")
pcall(function()
    local VirtualInputManager = game:GetService("VirtualInputManager")
    -- Simulate pressing '1'
    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.One, false, game)
    task.wait(0.1)
    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.One, false, game)
    task.wait(0.5)
    -- Simulate pressing Left Shift
    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.LeftShift, false, game)
    task.wait(0.1)
    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.LeftShift, false, game)
    print("One-time key press completed.")
end)

-- Auto-start the farm loop after initial actions
print("Auto-starting farm loop...")
toggleOreFarmLoop(UIElements.FarmOreButton)
